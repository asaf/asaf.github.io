<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: couchdb | Asaf Shakarchi]]></title>
  <link href="http://asaf.github.io/blog/categories/couchdb/atom.xml" rel="self"/>
  <link href="http://asaf.github.io/"/>
  <updated>2013-07-08T18:55:21-07:00</updated>
  <id>http://asaf.github.io/</id>
  <author>
    <name><![CDATA[Asaf Shakarchi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Installing CouchDB instance on Amazon AMI]]></title>
    <link href="http://asaf.github.io/blog/2013/07/08/installing-couch-db-on-amazon-ami/"/>
    <updated>2013-07-08T18:53:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/07/08/installing-couch-db-on-amazon-ami</id>
    <content type="html"><![CDATA[<p><img class="<a" src="href="http://couchdb.apache.org/image/couch.png">http://couchdb.apache.org/image/couch.png</a>" width="160" height="180" title="Couch" ></p>

<p>One of our platform is based on CouchDB, we host everything on Amazon EC2 and while Amazon lacks with CouchDB support,
I have decided to build our own CouchDB server.</p>

<p>So here&rsquo;s a guide, how to install CouchDB on Amazon AMI (Amazon Linux):</p>

<h3>Launch Instance</h3>

<p>Login into EC2, and launch a new instanc and choose <em>Amazon Linux AMI</em>,
You can of course choose other Linux flavours (you are not going to use Windows right?),</p>

<p>But I really suggest going with Amazon AMI, it is EBS backed, ships with AWS tools installed and has a
RHEL style package management using <em>yum</em>.</p>

<p>Once your instance is launched, SSH it, i&rsquo;m sure you can do.</p>

<p>Now lets updated the system to latest:</p>

<p><code>bash
[ec2-user@ip ~]$ sudo yum update
</code></p>

<h3>Installing CouchDB via EPEL</h3>

<p>Enabling EPEL repo, we need some packages missing in standard Amazon repos:</p>

<p>``` bash
[ec2-user@ip ~]$ vi /etc/yum.repos.d/epel.repo</p>

<p>&hellip;</p>

<h1>change to enabled=1</h1>

<p>enabled=1
```</p>

<p>Now if you don&rsquo;t care to work with old CouchDB version, you can simply install it by:</p>

<p><code>bash
[ec2-user@ip ~]$ yum info couchdb
[ec2-user@ip ~]$ yum install couchdb
</code></p>

<p>But if this is not sufficient for you like us and you want a more updated version, proceed reading :&ndash;)</p>

<h3>Installing latest CouchDB</h3>

<p>Current CouchDB version is <em>1.3.1</em>, but this guide should work for future versions as well (unless CouchDB folks decides to do major changes)</p>

<h4>Install Dependencies</h4>

<p>We are going to build CouchDB from sources, Couch is written in <a href="Erlang">http://www.erlang.org/</a>, so few dependencies are needed:</p>

<p>(Note: Don&rsquo;t forget to enable EPEL repo, see above!)</p>

<p><code>bash
[ec2-user@ip ~]$ sudo yum groupinstall "Development Tools"
[ec2-user@ip ~]$ sudo yum install perl-Test-Harness
[ec2-user@ip ~]$ sudo yum install erlang-erts
[ec2-user@ip ~]$ sudo yum install erlang-os_mon
[ec2-user@ip ~]$ sudo yum install erlang-eunit
[ec2-user@ip ~]$ sudo yum install libicu-devel
[ec2-user@ip ~]$ sudo yum install autoconf-archive #only available in EPEL repo
[ec2-user@ip ~]$ sudo yum install curl-devel
[ec2-user@ip ~]$ sudo yum install erlang-etap
</code></p>

<p>From Couch folks:</p>

<blockquote><p>While CouchDB builds against the default js-devel-1.7.0 included in some
distributions, it&rsquo;s recommended to use a more recent js-devel-1.8.5.</p></blockquote>

<p>And since Amazon AMI only ships (via EPEL repo) with 1.7.0, we'r going to build js-devel-1.8.5:
If you feel comfortable with js-devel 1.7.0, you can just:</p>

<p><code>bash
[ec2-user@ip ~]$ sudo yum install js-devel
</code></p>

<p>OR: if you have the energy, or this is going to be a production environment, then install js-devel from sources:</p>

<p>``` bash
[ec2-user@ip ~]$ cd ~
[ec2-user@ip ~]$ wget <a href="http://ftp.gnu.org/gnu/autoconf/autoconf-2.13.tar.gz">http://ftp.gnu.org/gnu/autoconf/autoconf-2.13.tar.gz</a>
[ec2-user@ip ~]$ cd autoconf-2.13
[ec2-user@ip ~]$ ./configure &mdash;prefix=/usr/local/autoconf-2.13
[ec2-user@ip ~]$ sudo make install</p>

<p>[ec2-user@ip ~]$ cd ~
[ec2-user@ip ~]$ wget <a href="http://ftp.mozilla.org/pub/mozilla.org/js/js185-1.0.0.tar.gz">http://ftp.mozilla.org/pub/mozilla.org/js/js185-1.0.0.tar.gz</a>
[ec2-user@ip ~]$ tar zxvfl js185-1.0.0.tar.gz
[ec2-user@ip ~]$ cd js-1.8.5/js/src/
[ec2-user@ip ~]$ /usr/local/autoconf-2.13/bin/autoconf
[ec2-user@ip ~]$ ./configure
[ec2-user@ip ~]$ make
[ec2-user@ip ~]$ sudo make install #this installs js-devel under /usr/local
```</p>

<p>Some references:</p>

<ul>
<li>Mozila SpiderMonkey reference: <a href="https://developer.mozilla.org/en-US/docs/SpiderMonkey/Build_Documentation">https://developer.mozilla.org/en-US/docs/SpiderMonkey/Build_Documentation</a></li>
<li>CouchDB SpiderMonkey reference: <a href="http://wiki.apache.org/couchdb/Installing_SpiderMonkey">http://wiki.apache.org/couchdb/Installing_SpiderMonkey</a></li>
<li>CouchDB dependencies requirements: <a href="https://github.com/apache/couchdb/blob/master/INSTALL.Unix">https://github.com/apache/couchdb/blob/master/INSTALL.Unix</a></li>
<li>Installing CouchDB on RHEL5: <a href="http://wiki.apache.org/couchdb/Installing_on_RHEL5">http://wiki.apache.org/couchdb/Installing_on_RHEL5</a></li>
</ul>


<h4>Building CouchDB from sources</h4>

<p><code>bash
[ec2-user@ip ~]$ cd ~
[ec2-user@ip ~]$ git clone https://github.com/apache/couchdb.git
[ec2-user@ip ~]$ cd couchdb
[ec2-user@ip ~]$ git checkout -b 1.3.1 1.3.1
[ec2-user@ip ~]$ ./bootstrap #should output: You have bootstrapped Apache CouchDB, time to relax.
[ec2-user@ip ~]$ ./configure --with-erlang=/usr/lib64/erlang/usr/include --with-js-lib=/usr/local/lib/ --with-js-include=/usr/local/include/js/ #should output: You have configured Apache CouchDB, time to relax.
[ec2-user@ip ~]$ make
[ec2-user@ip ~]$ make test
[ec2-user@ip ~]$ make install
</code></p>

<p><em>Note:</em> you can of course replace <em>1.3.1</em> tag with the latest stable version if there&rsquo;s any.</p>

<p>Hey, we'r almost done, lets configure the environment.</p>

<h4>Create a couch user</h4>

<p>For security reasons, create a dedicated couch user and correct files ownership and permissions:</p>

<p><code>bash
[ec2-user@ip ~]$ sudo adduser -r --home /usr/local/var/lib/couchdb -M --shell /bin/bash --comment "CouchDB Administrator" couchdb
[ec2-user@ip ~]$ sudo chown -R couchdb:couchdb /usr/local/etc/couchdb
[ec2-user@ip ~]$ sudo chown -R couchdb:couchdb /usr/local/var/lib/couchdb
[ec2-user@ip ~]$ sudo chown -R couchdb:couchdb /usr/local/var/log/couchdb
[ec2-user@ip ~]$ sudo chown -R couchdb:couchdb /usr/local/var/run/couchdb
[ec2-user@ip ~]$ sudo chmod 0770 /usr/local/etc/couchdb
[ec2-user@ip ~]$ sudo chmod 0770 /usr/local/var/lib/couchdb
[ec2-user@ip ~]$ sudo chmod 0770 /usr/local/var/log/couchdb
[ec2-user@ip ~]$ sudo chmod 0770 /usr/local/var/run/couchdb
</code></p>

<h4>Starting Couch</h4>

<p><code>bash
[ec2-user@ip ~]$ sudo /usr/local/etc/rc.d/couchdb start
[ec2-user@ip ~]$ sudo /usr/local/etc/rc.d/couchdb status #should result: Apache CouchDB is running as process 3548, time to relax.
</code></p>

<p>Check that things are working:</p>

<p>``` bash
[ec2-user@ip ~]$ curl <a href="http://localhost:5984">http://localhost:5984</a></p>

<p>{&ldquo;couchdb&rdquo;:&ldquo;Welcome&rdquo;,&ldquo;uuid&rdquo;:&ldquo;6d597578de8744f92bdbc99c368c10ca&rdquo;,&ldquo;version&rdquo;:&ldquo;1.3.1&rdquo;,&ldquo;vendor&rdquo;:{&ldquo;name&rdquo;:&ldquo;The Apache Software Foundation&rdquo;,&ldquo;version&rdquo;:&ldquo;1.3.1&rdquo;}}
```</p>

<h4>Starting services when system starts</h4>

<p><code>bash
[ec2-user@ip ~]$ sudo ln -s /usr/local/etc/rc.d/couchdb /etc/init.d/couchdb
[ec2-user@ip ~]$ sudo chkconfig --level 345 couchdb on
[ec2-user@ip ~]$ service couchdb stop
[ec2-user@ip ~]$ service couchdb start
</code></p>

<p>I suggest you to create a template at this stage, so you can simply create new instances whenever you need,</p>

<p>Hey, you are done, now it&rsquo;s really time to relax :&ndash;)</p>
]]></content>
  </entry>
  
</feed>
