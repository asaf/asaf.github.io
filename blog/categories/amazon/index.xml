<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Amazon on Asaf Shakarchi</title>
    <link>http://asaf.github.io/blog/categories/amazon/</link>
    <description>Recent content in Amazon on Asaf Shakarchi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Jul 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://asaf.github.io/blog/categories/amazon/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Installing CouchDB instance on Amazon AMI using build-couchdb</title>
      <link>http://asaf.github.io/blog/2013/07/10/installing-couchdb-instance-on-amazon-ami-using-build-couchdb/</link>
      <pubDate>Wed, 10 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://asaf.github.io/blog/2013/07/10/installing-couchdb-instance-on-amazon-ami-using-build-couchdb/</guid>
      <description>

&lt;p&gt;{% img &lt;a href=&#34;http://couchdb.apache.org/image/couch.png&#34;&gt;http://couchdb.apache.org/image/couch.png&lt;/a&gt; 160 180 Couch %}&lt;/p&gt;

&lt;p&gt;This post explains how to install CouchDB on Amazon AMI using &lt;a href=&#34;https://github.com/iriscouch/build-couchdb&#34;&gt;build-couchdb&lt;/a&gt;/&lt;/p&gt;

&lt;p&gt;If you want to install couch from sources without build-couchdb tool, read:
&lt;a href=&#34;../../blog/2013/07/08/installing-couch-db-on-amazon-ami/&#34;&gt;Installing CouchDB instance on Amazon AMI&lt;/a&gt; is a working link&lt;/p&gt;

&lt;p&gt;build-couchdb does the following things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install general dependencies via yum (such as gcc, ruby, automake, rubygems, etc.)&lt;/li&gt;
&lt;li&gt;Clone the &amp;lsquo;build-couchdb&amp;rsquo; project, initalize and update its sub modules (will clone CouchDB itself, curl, gnulib, etc),
These are all the dependencies that CouchDB needs in order to be compiled.&lt;/li&gt;
&lt;li&gt;Compiles all dependencies&lt;/li&gt;
&lt;li&gt;Compiles CouchDB linked with the compiled dependencies.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Okay, go grab coffee and lets start!&lt;/p&gt;

&lt;h3 id=&#34;launch-instance&#34;&gt;Launch Instance&lt;/h3&gt;

&lt;p&gt;Login into EC2, and launch a new instanc and choose &lt;em&gt;Amazon Linux AMI&lt;/em&gt;,
You can of course choose other Linux flavours (you are not going to use Windows right?),&lt;/p&gt;

&lt;p&gt;But I really suggest going with Amazon AMI, it is EBS backed, ships with AWS tools installed and has a
RHEL style package management using &lt;em&gt;yum&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Once your instance is launched, SSH it, i&amp;rsquo;m sure you can do.&lt;/p&gt;

&lt;p&gt;Now lets updated the system to latest:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum update
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;h4 id=&#34;installing-os-dependencies&#34;&gt;Installing OS dependencies&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install gcc gcc-c++ libtool curl-devel python27 help2man texinfo ruby-rdoc zlib-devel openssl-devel make automake rubygems perl git-core 
sudo gem install rake --no-ri --no-rdoc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you don&amp;rsquo;t want to get into troubles where build-couch tries to patch autoconf-2.69 because of old python version (&amp;lt; 2.6) then link to python 2.7,
at least during the time couch is being built.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mv /usr/bin/python /usr/bin/python_org
sudo ln -s /usr/bin/python2.7 /usr/bin/python
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;clone-build-couchdb&#34;&gt;Clone build-couchdb&lt;/h4&gt;

&lt;p&gt;git clone git://github.com/iriscouch/build-couchdb
cd build-couchdb
git submodule init
git submodule update&lt;/p&gt;

&lt;h4 id=&#34;optional-upgrade-spidermonkey&#34;&gt;Optional: Upgrade SpiderMonkey&lt;/h4&gt;

&lt;p&gt;build-couch uses not an official Mozilla SpiderMonkey version, but considered to be very stable,
if you would like to replace it with other versions then do the following,
&lt;em&gt;You can safely skip this, proceed only if you have a good reason to do so&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install mercurial
cd
hg clone --verbose http://hg.mozilla.org/releases/mozilla-release  
cd mozilla-release
hg checkout FIREFOX_XX_0_RELEASE --clean #replace XX with the tag you wish
rm -rf ~/build-couchdb/dependencies/spidermonkey/js
rm -rf ~/build-couchdb/dependencies/spidermonkey/mfbt
cp -r js mfbt ~/build-couchdb/dependencies/spidermonkey
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;building-couchdb-and-its-dependencies&#34;&gt;Building CouchDB and its dependencies&lt;/h4&gt;

&lt;p&gt;Now lets build Couch, you can replace &lt;em&gt;1.3.1&lt;/em&gt; with any CouchDB release you wish to build,
Or change the installation location.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo rake git=&amp;quot;git://git.apache.org/couchdb.git tags/1.3.1&amp;quot; install=/usr/local/couchdb-1.3.1
sudo ln -s /usr/local/couchdb-1.3.1 /usr/local/couchdb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now go eat something, drink (another?) coffee, take a shower (you will have time for all of them, I promise.)&lt;/p&gt;

&lt;p&gt;You should expect the following output:
&amp;gt; Plugins done&lt;/p&gt;

&lt;p&gt;Now lets see what we&amp;rsquo;ve built:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /usr/local/couchdb-1.3.1
ls bin

&amp;gt; aclocal       autoheader2.13  autom4te2.69    autoreconf2.69  autoupdate2.59  ct_run       erl       genctd       ifnames2.62  pkgdata
&amp;gt; aclocal-1.11  autoheader2.59  automake        autoscan2.13    autoupdate2.62  curl         erlc      genrb        ifnames2.69  run_erl
&amp;gt; autoconf2.13  autoheader2.62  automake-1.11   autoscan2.59    autoupdate2.69  curl-config  escript   icu-config   js-config    run_test
&amp;gt; autoconf2.59  autoheader2.69  autoreconf2.13  autoscan2.62    couch-config    derb         genbrk    icuinfo      libtool      to_erl
&amp;gt; autoconf2.62  autom4te2.59    autoreconf2.59  autoscan2.69    couchdb         dialyzer     gencfu    ifnames2.13  libtoolize   typer
&amp;gt; autoconf2.69  autom4te2.62    autoreconf2.62  autoupdate2.13  couchjs         epmd         gencnval  ifnames2.59  makeconv     uconv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lets execute Couch to ensure it can be executed.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo ./bin/couchdb

&amp;gt; Apache CouchDB 1.3.1 (LogLevel=info) is starting.
&amp;gt; Apache CouchDB has started. Time to relax.
&amp;gt; [info] [&amp;lt;0.32.0&amp;gt;] Apache CouchDB has started on http://127.0.0.1:5984/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can open another terminal to ensure Couch replies properly:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl http://127.0.0.1:5984

&amp;gt; {&amp;quot;couchdb&amp;quot;:&amp;quot;Welcome&amp;quot;,&amp;quot;uuid&amp;quot;:&amp;quot;9db29433ea76ccfaa81726f6ace742f4&amp;quot;,&amp;quot;version&amp;quot;:&amp;quot;1.3.1&amp;quot;,&amp;quot;vendor&amp;quot;:{&amp;quot;name&amp;quot;:&amp;quot;The Apache Software Foundation&amp;quot;,&amp;quot;version&amp;quot;:&amp;quot;1.3.1&amp;quot;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;

&lt;h4 id=&#34;replace-python-link&#34;&gt;Replace Python link&lt;/h4&gt;

&lt;p&gt;To avoid breaking yum and other things, it is adviced to return the python binary link back to its original version&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo rm /usr/bin/python
sudo mv /usr/bin/python_org /usr/bin/python
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;run-couch-on-isolated-user-and-correct-files-ownership&#34;&gt;Run Couch on isolated user and correct files ownership&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# add couchdb user
sudo adduser --system --home /usr/local/couchdb/var/lib/couchdb -M --shell /bin/bash --comment &amp;quot;CouchDB&amp;quot; couchdb

# change file ownership
sudo chown -R couchdb:couchdb /usr/local/couchdb/etc/couchdb /usr/local/couchdb/var/lib/couchdb /usr/local/couchdb/var/log/couchdb /usr/local/couchdb/var/run/couchdb
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;couch-ini-file&#34;&gt;couch ini file&lt;/h4&gt;

&lt;p&gt;Lets create couch ini file&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat &amp;lt;&amp;lt; &#39;EOF&#39; &amp;gt; /usr/local/couchdb/etc/couchdb/local.ini
[couchdb]
#read more here: http://guide.couchdb.org/draft/performance.html
delayed_commits = false

[httpd]
port = 80
bind_address = 0.0.0.0
socket_options = [{recbuf, 262144}, {sndbuf, 262144}, {nodelay, true}]
WWW-Authenticate = Basic realm=&amp;quot;administrator&amp;quot;
;WWW-Authenticate = bummer

[couch_httpd_auth]
require_valid_user = true

[log]
level = error

[admins]
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;password-protection&#34;&gt;Password protection&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PASS=`&amp;lt;/dev/urandom tr -dc &#39;12345!@#$%qwertQWERTasdfgASDFGzxcvbZXCVB&#39; | head -c20; echo &amp;quot;&amp;quot;`
echo &amp;quot;admin = ${ADMIN_PASSWORD}&amp;quot; &amp;gt;&amp;gt; /usr/local/etc/couchdb/local.ini
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Couch is smart enough to hash the passwords.&lt;/p&gt;

&lt;h4 id=&#34;logs-rotation&#34;&gt;Logs Rotation&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if [ ! -e &amp;quot;/etc/logrotate.d/couchdb&amp;quot; ]
then
  # add couch.log to logrotate
  sudo ln -s /usr/local/couchdb/etc/logrotate.d/couchdb /etc/logrotate.d/
  # change to daily rotation
  sudo sed -e s/weekly/daily/g -i /usr/local/couchdb/etc/logrotate.d/couchdb
  #logrotate -v -f /etc/logrotate.d/couchdb 
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;run-couchdb-on-startup&#34;&gt;Run CouchDB on startup&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# run couchdb on startup
sudo ln -s /usr/local/couchdb/etc/rc.d/couchdb /etc/init.d/couchdb
sudo chkconfig --add couchdb
sudo chkconfig --level 345 couchdb on

sudo service couchdb status
#Apache CouchDB is not running.

sudo service couchdb start
#Apache CouchDB is running as process 5047, time to relax.

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now it&amp;rsquo;s really time to relax, enjoy :-)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing CouchDB instance on Amazon AMI</title>
      <link>http://asaf.github.io/blog/2013/07/08/installing-couch-db-on-amazon-ami/</link>
      <pubDate>Mon, 08 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://asaf.github.io/blog/2013/07/08/installing-couch-db-on-amazon-ami/</guid>
      <description>

&lt;p&gt;{% img &lt;a href=&#34;http://couchdb.apache.org/image/couch.png&#34;&gt;http://couchdb.apache.org/image/couch.png&lt;/a&gt; 160 180 Couch %}&lt;/p&gt;

&lt;p&gt;One of our platform is based on CouchDB, we host everything on Amazon EC2 and while Amazon lacks with CouchDB support,
I have decided to build our own CouchDB server.&lt;/p&gt;

&lt;p&gt;So here&amp;rsquo;s a guide, how to install CouchDB on Amazon AMI (Amazon Linux):&lt;/p&gt;

&lt;h3 id=&#34;launch-instance&#34;&gt;Launch Instance&lt;/h3&gt;

&lt;p&gt;Login into EC2, and launch a new instanc and choose &lt;em&gt;Amazon Linux AMI&lt;/em&gt;,
You can of course choose other Linux flavours (you are not going to use Windows right?),&lt;/p&gt;

&lt;p&gt;But I really suggest going with Amazon AMI, it is EBS backed, ships with AWS tools installed and has a
RHEL style package management using &lt;em&gt;yum&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Once your instance is launched, SSH it, i&amp;rsquo;m sure you can do.&lt;/p&gt;

&lt;p&gt;Now lets updated the system to latest:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[ec2-user@ip ~]$ sudo yum update
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;update&#34;&gt;UPDATE&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Before proceeding with this guide, which compiles CouchDB from sources without any automated tool&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I found this project:
&lt;a href=&#34;https://github.com/iriscouch/build-couchdb&#34;&gt;https://github.com/iriscouch/build-couchdb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which maintains its own CouchDB dependencies and perform the build for you, if you choose this approach, check out this post:
&lt;a href=&#34;../../blog/2013/07/10/installing-couchdb-instance-on-amazon-ami-using-build-couchdb/&#34;&gt;Installing CouchDB instance on Amazon AMI using build-couchdb&lt;/a&gt; is a working link&lt;/p&gt;

&lt;p&gt;But if you still want to build from sources (which is more depdendent on Amazon&amp;rsquo;s dependencies) proceed reading.&lt;/p&gt;

&lt;h3 id=&#34;installing-couchdb-via-epel&#34;&gt;Installing CouchDB via EPEL&lt;/h3&gt;

&lt;p&gt;Enabling EPEL repo, we need some packages missing in standard Amazon repos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[ec2-user@ip ~]$ vi /etc/yum.repos.d/epel.repo

...

#change to enabled=1
enabled=1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now if you don&amp;rsquo;t care to work with old CouchDB version, you can simply install it by:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[ec2-user@ip ~]$ yum info couchdb
[ec2-user@ip ~]$ yum install couchdb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But if this is not sufficient for you like us and you want a more updated version, proceed reading :-)&lt;/p&gt;

&lt;h3 id=&#34;installing-latest-couchdb&#34;&gt;Installing latest CouchDB&lt;/h3&gt;

&lt;p&gt;Current CouchDB version is &lt;em&gt;1.3.1&lt;/em&gt;, but this guide should work for future versions as well (unless CouchDB folks decides to do major changes)&lt;/p&gt;

&lt;h4 id=&#34;install-dependencies&#34;&gt;Install Dependencies&lt;/h4&gt;

&lt;p&gt;We are going to build CouchDB from sources, Couch is written in &lt;a href=&#34;Erlang&#34;&gt;http://www.erlang.org/&lt;/a&gt;, so few dependencies are needed:&lt;/p&gt;

&lt;p&gt;(Note: Don&amp;rsquo;t forget to enable EPEL repo, see above!)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[ec2-user@ip ~]$ sudo yum groupinstall &amp;quot;Development Tools&amp;quot;
[ec2-user@ip ~]$ sudo yum install perl-Test-Harness
[ec2-user@ip ~]$ sudo yum install erlang-erts
[ec2-user@ip ~]$ sudo yum install erlang-os_mon
[ec2-user@ip ~]$ sudo yum install erlang-eunit
[ec2-user@ip ~]$ sudo yum install libicu-devel
[ec2-user@ip ~]$ sudo yum install autoconf-archive #only available in EPEL repo
[ec2-user@ip ~]$ sudo yum install curl-devel
[ec2-user@ip ~]$ sudo yum install erlang-etap
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From Couch folks:
&amp;gt;While CouchDB builds against the default js-devel-1.7.0 included in some
&amp;gt;distributions, it&amp;rsquo;s recommended to use a more recent js-devel-1.8.5.&lt;/p&gt;

&lt;p&gt;And since Amazon AMI only ships (via EPEL repo) with 1.7.0, we&amp;rsquo;r going to build js-devel-1.8.5:
If you feel comfortable with js-devel 1.7.0, you can just:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[ec2-user@ip ~]$ sudo yum install js-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OR: if you have the energy, or this is going to be a production environment, then install js-devel from sources:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[ec2-user@ip ~]$ cd ~
[ec2-user@ip ~]$ wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.13.tar.gz
[ec2-user@ip ~]$ cd autoconf-2.13
[ec2-user@ip ~]$ ./configure --prefix=/usr/local/autoconf-2.13
[ec2-user@ip ~]$ sudo make install

[ec2-user@ip ~]$ cd ~
[ec2-user@ip ~]$ wget http://ftp.mozilla.org/pub/mozilla.org/js/js185-1.0.0.tar.gz
[ec2-user@ip ~]$ tar zxvfl js185-1.0.0.tar.gz
[ec2-user@ip ~]$ cd js-1.8.5/js/src/
[ec2-user@ip ~]$ /usr/local/autoconf-2.13/bin/autoconf
[ec2-user@ip ~]$ ./configure
[ec2-user@ip ~]$ make
[ec2-user@ip ~]$ sudo make install #this installs js-devel under /usr/local
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Some references:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mozila SpiderMonkey reference: &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/SpiderMonkey/Build_Documentation&#34;&gt;https://developer.mozilla.org/en-US/docs/SpiderMonkey/Build_Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CouchDB SpiderMonkey reference: &lt;a href=&#34;http://wiki.apache.org/couchdb/Installing_SpiderMonkey&#34;&gt;http://wiki.apache.org/couchdb/Installing_SpiderMonkey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CouchDB dependencies requirements: &lt;a href=&#34;https://github.com/apache/couchdb/blob/master/INSTALL.Unix&#34;&gt;https://github.com/apache/couchdb/blob/master/INSTALL.Unix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Installing CouchDB on RHEL5: &lt;a href=&#34;http://wiki.apache.org/couchdb/Installing_on_RHEL5&#34;&gt;http://wiki.apache.org/couchdb/Installing_on_RHEL5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;building-couchdb-from-sources&#34;&gt;Building CouchDB from sources&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[ec2-user@ip ~]$ cd ~
[ec2-user@ip ~]$ git clone https://github.com/apache/couchdb.git
[ec2-user@ip ~]$ cd couchdb
[ec2-user@ip ~]$ git checkout -b 1.3.1 1.3.1
[ec2-user@ip ~]$ ./bootstrap #should output: You have bootstrapped Apache CouchDB, time to relax.
[ec2-user@ip ~]$ ./configure --with-erlang=/usr/lib64/erlang/usr/include --with-js-lib=/usr/local/lib/ --with-js-include=/usr/local/include/js/ #should output: You have configured Apache CouchDB, time to relax.
[ec2-user@ip ~]$ make
[ec2-user@ip ~]$ make test
[ec2-user@ip ~]$ make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; you can of course replace &lt;em&gt;1.3.1&lt;/em&gt; tag with the latest stable version if there&amp;rsquo;s any.&lt;/p&gt;

&lt;p&gt;Hey, we&amp;rsquo;r almost done, lets configure the environment.&lt;/p&gt;

&lt;h4 id=&#34;create-a-couch-user&#34;&gt;Create a couch user&lt;/h4&gt;

&lt;p&gt;For security reasons, create a dedicated couch user and correct files ownership and permissions:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[ec2-user@ip ~]$ sudo adduser -r --home /usr/local/var/lib/couchdb -M --shell /bin/bash --comment &amp;quot;CouchDB Administrator&amp;quot; couchdb
[ec2-user@ip ~]$ sudo chown -R couchdb:couchdb /usr/local/etc/couchdb
[ec2-user@ip ~]$ sudo chown -R couchdb:couchdb /usr/local/var/lib/couchdb
[ec2-user@ip ~]$ sudo chown -R couchdb:couchdb /usr/local/var/log/couchdb
[ec2-user@ip ~]$ sudo chown -R couchdb:couchdb /usr/local/var/run/couchdb
[ec2-user@ip ~]$ sudo chmod 0770 /usr/local/etc/couchdb
[ec2-user@ip ~]$ sudo chmod 0770 /usr/local/var/lib/couchdb
[ec2-user@ip ~]$ sudo chmod 0770 /usr/local/var/log/couchdb
[ec2-user@ip ~]$ sudo chmod 0770 /usr/local/var/run/couchdb
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;starting-couch&#34;&gt;Starting Couch&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[ec2-user@ip ~]$ sudo /usr/local/etc/rc.d/couchdb start
[ec2-user@ip ~]$ sudo /usr/local/etc/rc.d/couchdb status #should result: Apache CouchDB is running as process 3548, time to relax.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check that things are working:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[ec2-user@ip ~]$ curl http://localhost:5984

{&amp;quot;couchdb&amp;quot;:&amp;quot;Welcome&amp;quot;,&amp;quot;uuid&amp;quot;:&amp;quot;6d597578de8744f92bdbc99c368c10ca&amp;quot;,&amp;quot;version&amp;quot;:&amp;quot;1.3.1&amp;quot;,&amp;quot;vendor&amp;quot;:{&amp;quot;name&amp;quot;:&amp;quot;The Apache Software Foundation&amp;quot;,&amp;quot;version&amp;quot;:&amp;quot;1.3.1&amp;quot;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;starting-services-when-system-starts&#34;&gt;Starting services when system starts&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[ec2-user@ip ~]$ sudo ln -s /usr/local/etc/rc.d/couchdb /etc/init.d/couchdb
[ec2-user@ip ~]$ sudo chkconfig --level 345 couchdb on
[ec2-user@ip ~]$ service couchdb stop
[ec2-user@ip ~]$ service couchdb start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I suggest you to create a template at this stage, so you can simply create new instances whenever you need,&lt;/p&gt;

&lt;p&gt;Hey, you are done, now it&amp;rsquo;s really time to relax :-)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>