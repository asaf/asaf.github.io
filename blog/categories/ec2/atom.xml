<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ec2 | Asaf Shakarchi]]></title>
  <link href="http://asaf.github.io/blog/categories/ec2/atom.xml" rel="self"/>
  <link href="http://asaf.github.io/"/>
  <updated>2014-09-19T07:21:50-07:00</updated>
  <id>http://asaf.github.io/</id>
  <author>
    <name><![CDATA[Asaf Shakarchi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Installing CouchDB instance on Amazon AMI using build-couchdb]]></title>
    <link href="http://asaf.github.io/blog/2013/07/10/installing-couchdb-instance-on-amazon-ami-using-build-couchdb/"/>
    <updated>2013-07-10T10:54:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/07/10/installing-couchdb-instance-on-amazon-ami-using-build-couchdb</id>
    <content type="html"><![CDATA[<p><img class="<a" src="href="http://couchdb.apache.org/image/couch.png">http://couchdb.apache.org/image/couch.png</a>" width="160" height="180" title="Couch" ></p>

<p>This post explains how to install CouchDB on Amazon AMI using <a href="https://github.com/iriscouch/build-couchdb">build-couchdb</a>/</p>

<p>If you want to install couch from sources without build-couchdb tool, read:
<a href="/blog/2013/07/08/installing-couch-db-on-amazon-ami/">Installing CouchDB instance on Amazon AMI</a> is a working link</p>

<p>build-couchdb does the following things:</p>

<ol>
<li>Install general dependencies via yum (such as gcc, ruby, automake, rubygems, etc.)</li>
<li>Clone the &lsquo;build-couchdb&rsquo; project, initalize and update its sub modules (will clone CouchDB itself, curl, gnulib, etc),
These are all the dependencies that CouchDB needs in order to be compiled.</li>
<li>Compiles all dependencies</li>
<li>Compiles CouchDB linked with the compiled dependencies.</li>
</ol>


<p>Okay, go grab coffee and lets start!</p>

<h3>Launch Instance</h3>

<p>Login into EC2, and launch a new instanc and choose <em>Amazon Linux AMI</em>,
You can of course choose other Linux flavours (you are not going to use Windows right?),</p>

<p>But I really suggest going with Amazon AMI, it is EBS backed, ships with AWS tools installed and has a
RHEL style package management using <em>yum</em>.</p>

<p>Once your instance is launched, SSH it, i&rsquo;m sure you can do.</p>

<p>Now lets updated the system to latest:</p>

<p><code>bash
sudo yum update
</code></p>

<h3>Installation</h3>

<h4>Installing OS dependencies</h4>

<p><code>bash
sudo yum install gcc gcc-c++ libtool curl-devel python27 help2man texinfo ruby-rdoc zlib-devel openssl-devel make automake rubygems perl git-core
sudo gem install rake --no-ri --no-rdoc
</code></p>

<p>If you don&rsquo;t want to get into troubles where build-couch tries to patch autoconf-2.69 because of old python version (&lt; 2.6) then link to python 2.7,
at least during the time couch is being built.</p>

<p><code>bash
sudo mv /usr/bin/python /usr/bin/python_org
sudo ln -s /usr/bin/python2.7 /usr/bin/python
</code></p>

<h4>Clone build-couchdb</h4>

<p>git clone git://github.com/iriscouch/build-couchdb
cd build-couchdb
git submodule init
git submodule update</p>

<h4>Optional: Upgrade SpiderMonkey</h4>

<p>build-couch uses not an official Mozilla SpiderMonkey version, but considered to be very stable,
if you would like to replace it with other versions then do the following,
<em>You can safely skip this, proceed only if you have a good reason to do so</em></p>

<p><code>bash
sudo yum install mercurial
cd
hg clone --verbose http://hg.mozilla.org/releases/mozilla-release  
cd mozilla-release
hg checkout FIREFOX_XX_0_RELEASE --clean #replace XX with the tag you wish
rm -rf ~/build-couchdb/dependencies/spidermonkey/js
rm -rf ~/build-couchdb/dependencies/spidermonkey/mfbt
cp -r js mfbt ~/build-couchdb/dependencies/spidermonkey
</code></p>

<h4>Building CouchDB and its dependencies</h4>

<p>Now lets build Couch, you can replace <em>1.3.1</em> with any CouchDB release you wish to build,
Or change the installation location.</p>

<p><code>bash
sudo rake git="git://git.apache.org/couchdb.git tags/1.3.1" install=/usr/local/couchdb-1.3.1
sudo ln -s /usr/local/couchdb-1.3.1 /usr/local/couchdb
</code></p>

<p>Now go eat something, drink (another?) coffee, take a shower (you will have time for all of them, I promise.)</p>

<p>You should expect the following output:</p>

<blockquote><p>Plugins done</p></blockquote>

<p>Now lets see what we&rsquo;ve built:</p>

<p>``` bash
cd /usr/local/couchdb-1.3.1
ls bin</p>

<blockquote><p>aclocal       autoheader2.13  autom4te2.69    autoreconf2.69  autoupdate2.59  ct_run       erl       genctd       ifnames2.62  pkgdata
aclocal-1.11  autoheader2.59  automake        autoscan2.13    autoupdate2.62  curl         erlc      genrb        ifnames2.69  run_erl
autoconf2.13  autoheader2.62  automake-1.11   autoscan2.59    autoupdate2.69  curl-config  escript   icu-config   js-config    run_test
autoconf2.59  autoheader2.69  autoreconf2.13  autoscan2.62    couch-config    derb         genbrk    icuinfo      libtool      to_erl
autoconf2.62  autom4te2.59    autoreconf2.59  autoscan2.69    couchdb         dialyzer     gencfu    ifnames2.13  libtoolize   typer
autoconf2.69  autom4te2.62    autoreconf2.62  autoupdate2.13  couchjs         epmd         gencnval  ifnames2.59  makeconv     uconv
```</p></blockquote>

<p>Lets execute Couch to ensure it can be executed.</p>

<p>``` bash
sudo ./bin/couchdb</p>

<blockquote><p>Apache CouchDB 1.3.1 (LogLevel=info) is starting.
Apache CouchDB has started. Time to relax.
[info] [&lt;0.32.0>] Apache CouchDB has started on <a href="http://127.0.0.1:5984/">http://127.0.0.1:5984/</a>
```</p></blockquote>

<p>You can open another terminal to ensure Couch replies properly:</p>

<p>``` bash
curl <a href="http://127.0.0.1:5984">http://127.0.0.1:5984</a></p>

<blockquote><p>{&ldquo;couchdb&rdquo;:&ldquo;Welcome&rdquo;,&ldquo;uuid&rdquo;:&ldquo;9db29433ea76ccfaa81726f6ace742f4&rdquo;,&ldquo;version&rdquo;:&ldquo;1.3.1&rdquo;,&ldquo;vendor&rdquo;:{&ldquo;name&rdquo;:&ldquo;The Apache Software Foundation&rdquo;,&ldquo;version&rdquo;:&ldquo;1.3.1&rdquo;}}
```</p></blockquote>

<h3>Configuration</h3>

<h4>Replace Python link</h4>

<p>To avoid breaking yum and other things, it is adviced to return the python binary link back to its original version</p>

<p><code>bash
sudo rm /usr/bin/python
sudo mv /usr/bin/python_org /usr/bin/python
</code></p>

<h4>Run Couch on isolated user and correct files ownership</h4>

<p>``` bash</p>

<h1>add couchdb user</h1>

<p>sudo adduser &mdash;system &mdash;home /usr/local/couchdb/var/lib/couchdb -M &mdash;shell /bin/bash &mdash;comment &ldquo;CouchDB&rdquo; couchdb</p>

<h1>change file ownership</h1>

<p>sudo chown -R couchdb:couchdb /usr/local/couchdb/etc/couchdb /usr/local/couchdb/var/lib/couchdb /usr/local/couchdb/var/log/couchdb /usr/local/couchdb/var/run/couchdb
```</p>

<h4>couch ini file</h4>

<p>Lets create couch ini file</p>

<p>``` bash
cat &lt;&lt; &lsquo;EOF&rsquo; > /usr/local/couchdb/etc/couchdb/local.ini
[couchdb]</p>

<h1>read more here: <a href="http://guide.couchdb.org/draft/performance.html">http://guide.couchdb.org/draft/performance.html</a></h1>

<p>delayed_commits = false</p>

<p>[httpd]
port = 80
bind_address = 0.0.0.0
socket_options = [{recbuf, 262144}, {sndbuf, 262144}, {nodelay, true}]
WWW-Authenticate = Basic realm=&ldquo;administrator&rdquo;
;WWW-Authenticate = bummer</p>

<p>[couch_httpd_auth]
require_valid_user = true</p>

<p>[log]
level = error</p>

<p>[admins]
EOF
```</p>

<h4>Password protection</h4>

<p><code>bash
export PASS=`&lt;/dev/urandom tr -dc '12345!@#$%qwertQWERTasdfgASDFGzxcvbZXCVB' | head -c20; echo ""`
echo "admin = ${ADMIN_PASSWORD}" &gt;&gt; /usr/local/etc/couchdb/local.ini
</code>
Couch is smart enough to hash the passwords.</p>

<h4>Logs Rotation</h4>

<p><code>bash
if [ ! -e "/etc/logrotate.d/couchdb" ]
then
  # add couch.log to logrotate
  sudo ln -s /usr/local/couchdb/etc/logrotate.d/couchdb /etc/logrotate.d/
  # change to daily rotation
  sudo sed -e s/weekly/daily/g -i /usr/local/couchdb/etc/logrotate.d/couchdb
  #logrotate -v -f /etc/logrotate.d/couchdb
fi
</code></p>

<h4>Run CouchDB on startup</h4>

<p>``` bash</p>

<h1>run couchdb on startup</h1>

<p>sudo ln -s /usr/local/couchdb/etc/rc.d/couchdb /etc/init.d/couchdb
sudo chkconfig &mdash;add couchdb
sudo chkconfig &mdash;level 345 couchdb on</p>

<p>sudo service couchdb status</p>

<h1>Apache CouchDB is not running.</h1>

<p>sudo service couchdb start</p>

<h1>Apache CouchDB is running as process 5047, time to relax.</h1>

<p>```</p>

<p>Now it&rsquo;s really time to relax, enjoy :&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing CouchDB instance on Amazon AMI]]></title>
    <link href="http://asaf.github.io/blog/2013/07/08/installing-couch-db-on-amazon-ami/"/>
    <updated>2013-07-08T18:53:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/07/08/installing-couch-db-on-amazon-ami</id>
    <content type="html"><![CDATA[<p><img class="<a" src="href="http://couchdb.apache.org/image/couch.png">http://couchdb.apache.org/image/couch.png</a>" width="160" height="180" title="Couch" ></p>

<p>One of our platform is based on CouchDB, we host everything on Amazon EC2 and while Amazon lacks with CouchDB support,
I have decided to build our own CouchDB server.</p>

<p>So here&rsquo;s a guide, how to install CouchDB on Amazon AMI (Amazon Linux):</p>

<h3>Launch Instance</h3>

<p>Login into EC2, and launch a new instanc and choose <em>Amazon Linux AMI</em>,
You can of course choose other Linux flavours (you are not going to use Windows right?),</p>

<p>But I really suggest going with Amazon AMI, it is EBS backed, ships with AWS tools installed and has a
RHEL style package management using <em>yum</em>.</p>

<p>Once your instance is launched, SSH it, i&rsquo;m sure you can do.</p>

<p>Now lets updated the system to latest:</p>

<p><code>bash
[ec2-user@ip ~]$ sudo yum update
</code></p>

<h2>UPDATE</h2>

<p><em>Before proceeding with this guide, which compiles CouchDB from sources without any automated tool</em></p>

<p>I found this project:
<a href="https://github.com/iriscouch/build-couchdb">https://github.com/iriscouch/build-couchdb</a></p>

<p>Which maintains its own CouchDB dependencies and perform the build for you, if you choose this approach, check out this post:
<a href="/blog/2013/07/10/installing-couchdb-instance-on-amazon-ami-using-build-couchdb/">Installing CouchDB instance on Amazon AMI using build-couchdb</a> is a working link</p>

<p>But if you still want to build from sources (which is more depdendent on Amazon&rsquo;s dependencies) proceed reading.</p>

<h3>Installing CouchDB via EPEL</h3>

<p>Enabling EPEL repo, we need some packages missing in standard Amazon repos:</p>

<p>``` bash
[ec2-user@ip ~]$ vi /etc/yum.repos.d/epel.repo</p>

<p>&hellip;</p>

<h1>change to enabled=1</h1>

<p>enabled=1
```</p>

<p>Now if you don&rsquo;t care to work with old CouchDB version, you can simply install it by:</p>

<p><code>bash
[ec2-user@ip ~]$ yum info couchdb
[ec2-user@ip ~]$ yum install couchdb
</code></p>

<p>But if this is not sufficient for you like us and you want a more updated version, proceed reading :&ndash;)</p>

<h3>Installing latest CouchDB</h3>

<p>Current CouchDB version is <em>1.3.1</em>, but this guide should work for future versions as well (unless CouchDB folks decides to do major changes)</p>

<h4>Install Dependencies</h4>

<p>We are going to build CouchDB from sources, Couch is written in <a href="Erlang">http://www.erlang.org/</a>, so few dependencies are needed:</p>

<p>(Note: Don&rsquo;t forget to enable EPEL repo, see above!)</p>

<p><code>bash
[ec2-user@ip ~]$ sudo yum groupinstall "Development Tools"
[ec2-user@ip ~]$ sudo yum install perl-Test-Harness
[ec2-user@ip ~]$ sudo yum install erlang-erts
[ec2-user@ip ~]$ sudo yum install erlang-os_mon
[ec2-user@ip ~]$ sudo yum install erlang-eunit
[ec2-user@ip ~]$ sudo yum install libicu-devel
[ec2-user@ip ~]$ sudo yum install autoconf-archive #only available in EPEL repo
[ec2-user@ip ~]$ sudo yum install curl-devel
[ec2-user@ip ~]$ sudo yum install erlang-etap
</code></p>

<p>From Couch folks:</p>

<blockquote><p>While CouchDB builds against the default js-devel-1.7.0 included in some
distributions, it&rsquo;s recommended to use a more recent js-devel-1.8.5.</p></blockquote>

<p>And since Amazon AMI only ships (via EPEL repo) with 1.7.0, we'r going to build js-devel-1.8.5:
If you feel comfortable with js-devel 1.7.0, you can just:</p>

<p><code>bash
[ec2-user@ip ~]$ sudo yum install js-devel
</code></p>

<p>OR: if you have the energy, or this is going to be a production environment, then install js-devel from sources:</p>

<p>``` bash
[ec2-user@ip ~]$ cd ~
[ec2-user@ip ~]$ wget <a href="http://ftp.gnu.org/gnu/autoconf/autoconf-2.13.tar.gz">http://ftp.gnu.org/gnu/autoconf/autoconf-2.13.tar.gz</a>
[ec2-user@ip ~]$ cd autoconf-2.13
[ec2-user@ip ~]$ ./configure &mdash;prefix=/usr/local/autoconf-2.13
[ec2-user@ip ~]$ sudo make install</p>

<p>[ec2-user@ip ~]$ cd ~
[ec2-user@ip ~]$ wget <a href="http://ftp.mozilla.org/pub/mozilla.org/js/js185-1.0.0.tar.gz">http://ftp.mozilla.org/pub/mozilla.org/js/js185-1.0.0.tar.gz</a>
[ec2-user@ip ~]$ tar zxvfl js185-1.0.0.tar.gz
[ec2-user@ip ~]$ cd js-1.8.5/js/src/
[ec2-user@ip ~]$ /usr/local/autoconf-2.13/bin/autoconf
[ec2-user@ip ~]$ ./configure
[ec2-user@ip ~]$ make
[ec2-user@ip ~]$ sudo make install #this installs js-devel under /usr/local
```</p>

<p>Some references:</p>

<ul>
<li>Mozila SpiderMonkey reference: <a href="https://developer.mozilla.org/en-US/docs/SpiderMonkey/Build_Documentation">https://developer.mozilla.org/en-US/docs/SpiderMonkey/Build_Documentation</a></li>
<li>CouchDB SpiderMonkey reference: <a href="http://wiki.apache.org/couchdb/Installing_SpiderMonkey">http://wiki.apache.org/couchdb/Installing_SpiderMonkey</a></li>
<li>CouchDB dependencies requirements: <a href="https://github.com/apache/couchdb/blob/master/INSTALL.Unix">https://github.com/apache/couchdb/blob/master/INSTALL.Unix</a></li>
<li>Installing CouchDB on RHEL5: <a href="http://wiki.apache.org/couchdb/Installing_on_RHEL5">http://wiki.apache.org/couchdb/Installing_on_RHEL5</a></li>
</ul>


<h4>Building CouchDB from sources</h4>

<p><code>bash
[ec2-user@ip ~]$ cd ~
[ec2-user@ip ~]$ git clone https://github.com/apache/couchdb.git
[ec2-user@ip ~]$ cd couchdb
[ec2-user@ip ~]$ git checkout -b 1.3.1 1.3.1
[ec2-user@ip ~]$ ./bootstrap #should output: You have bootstrapped Apache CouchDB, time to relax.
[ec2-user@ip ~]$ ./configure --with-erlang=/usr/lib64/erlang/usr/include --with-js-lib=/usr/local/lib/ --with-js-include=/usr/local/include/js/ #should output: You have configured Apache CouchDB, time to relax.
[ec2-user@ip ~]$ make
[ec2-user@ip ~]$ make test
[ec2-user@ip ~]$ make install
</code></p>

<p><em>Note:</em> you can of course replace <em>1.3.1</em> tag with the latest stable version if there&rsquo;s any.</p>

<p>Hey, we'r almost done, lets configure the environment.</p>

<h4>Create a couch user</h4>

<p>For security reasons, create a dedicated couch user and correct files ownership and permissions:</p>

<p><code>bash
[ec2-user@ip ~]$ sudo adduser -r --home /usr/local/var/lib/couchdb -M --shell /bin/bash --comment "CouchDB Administrator" couchdb
[ec2-user@ip ~]$ sudo chown -R couchdb:couchdb /usr/local/etc/couchdb
[ec2-user@ip ~]$ sudo chown -R couchdb:couchdb /usr/local/var/lib/couchdb
[ec2-user@ip ~]$ sudo chown -R couchdb:couchdb /usr/local/var/log/couchdb
[ec2-user@ip ~]$ sudo chown -R couchdb:couchdb /usr/local/var/run/couchdb
[ec2-user@ip ~]$ sudo chmod 0770 /usr/local/etc/couchdb
[ec2-user@ip ~]$ sudo chmod 0770 /usr/local/var/lib/couchdb
[ec2-user@ip ~]$ sudo chmod 0770 /usr/local/var/log/couchdb
[ec2-user@ip ~]$ sudo chmod 0770 /usr/local/var/run/couchdb
</code></p>

<h4>Starting Couch</h4>

<p><code>bash
[ec2-user@ip ~]$ sudo /usr/local/etc/rc.d/couchdb start
[ec2-user@ip ~]$ sudo /usr/local/etc/rc.d/couchdb status #should result: Apache CouchDB is running as process 3548, time to relax.
</code></p>

<p>Check that things are working:</p>

<p>``` bash
[ec2-user@ip ~]$ curl <a href="http://localhost:5984">http://localhost:5984</a></p>

<p>{&ldquo;couchdb&rdquo;:&ldquo;Welcome&rdquo;,&ldquo;uuid&rdquo;:&ldquo;6d597578de8744f92bdbc99c368c10ca&rdquo;,&ldquo;version&rdquo;:&ldquo;1.3.1&rdquo;,&ldquo;vendor&rdquo;:{&ldquo;name&rdquo;:&ldquo;The Apache Software Foundation&rdquo;,&ldquo;version&rdquo;:&ldquo;1.3.1&rdquo;}}
```</p>

<h4>Starting services when system starts</h4>

<p><code>bash
[ec2-user@ip ~]$ sudo ln -s /usr/local/etc/rc.d/couchdb /etc/init.d/couchdb
[ec2-user@ip ~]$ sudo chkconfig --level 345 couchdb on
[ec2-user@ip ~]$ service couchdb stop
[ec2-user@ip ~]$ service couchdb start
</code></p>

<p>I suggest you to create a template at this stage, so you can simply create new instances whenever you need,</p>

<p>Hey, you are done, now it&rsquo;s really time to relax :&ndash;)</p>
]]></content>
  </entry>
  
</feed>
