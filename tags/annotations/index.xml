<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Annotations on Asaf Shakarzy</title>
    <link>http://asaf.github.io/tags/annotations/</link>
    <description>Recent content in Annotations on Asaf Shakarzy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved, Asaf Shakarzy 2018</copyright>
    <lastBuildDate>Tue, 23 Jun 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://asaf.github.io/tags/annotations/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Extending behavior of React Components by ES6 Decorators &amp; Higher Order Components</title>
      <link>http://asaf.github.io/2015/06/23/extending-behavior-of-react-components-by-es6-decorators/</link>
      <pubDate>Tue, 23 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://asaf.github.io/2015/06/23/extending-behavior-of-react-components-by-es6-decorators/</guid>
      <description>About Mixins &amp;amp; Higher Order Components Sometimes it makes sense to extends a behavior of a component, while mixins are still alive, they&amp;rsquo;r not recommended anylonger, use Higher Order Components instead.
So instead of doing this:
function StoreMixin(...stores) { var Mixin = { getInitialState() { return this.getStateFromStores(this.props); }, ... } } var UserProfilePage = React.createClass({ mixins: [StoreMixin(UserStore)], propTypes: { userId: PropTypes.number.isRequired }, ... })  You can do that:</description>
    </item>
    
  </channel>
</rss>