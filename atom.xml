<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Asaf Shakarchi]]></title>
  <link href="http://asaf.github.io/atom.xml" rel="self"/>
  <link href="http://asaf.github.io/"/>
  <updated>2014-09-19T07:15:17-07:00</updated>
  <id>http://asaf.github.io/</id>
  <author>
    <name><![CDATA[Asaf Shakarchi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[New Ember Components Suite!]]></title>
    <link href="http://asaf.github.io/blog/2014/02/08/ember-forms/"/>
    <updated>2014-02-08T17:57:00-08:00</updated>
    <id>http://asaf.github.io/blog/2014/02/08/ember-forms</id>
    <content type="html"><![CDATA[<p>Introducing a new Ember Components suite!</p>

<p>Ember Components is a set of rich web components written for Ember.js that let you create an astonishing UI for ambitious web applications.</p>

<p>This project aims to be the successor of our Bootstrap for Ember project as all components on this suite are not bound to any specific CSS framework.</p>

<p>Github repo: <a href="https://github.com/indexiatech/ember-components">https://github.com/indexiatech/ember-components</a></p>

<p>Demo &amp; docs: <a href="http://indexiatech.github.io/ember-components">http://indexiatech.github.io/ember-components</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bootstrap for Ember - more than 100 stars in 1 week]]></title>
    <link href="http://asaf.github.io/blog/2013/09/02/bootstrap-for-ember-more-than-100-stars-in-1-week/"/>
    <updated>2013-09-02T16:31:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/09/02/bootstrap-for-ember-more-than-100-stars-in-1-week</id>
    <content type="html"><![CDATA[<p>This is awesome! <em>Bootstrap for Ember</em> got more than 100 github <strong>stars</strong> in less than a week,</p>

<p>Thanks for the great feedbacks, here&rsquo;s an interesting tweet of the author of Handlebars and Ember.js, <em>Yehuda Katz</em>.</p>

<blockquote class="twitter-tweet"><p>Also, <a href="http://t.co/NtqRMNtsA4">http://t.co/NtqRMNtsA4</a> (Bootstrap for <a href="https://twitter.com/search?q=%23emberjs&amp;src=hash">#emberjs</a> using components) is kind of awesome!</p>&mdash; Yehuda Katz (@wycats) <a href="https://twitter.com/wycats/statuses/373875479096205312">August 31, 2013</a></blockquote>


<p>Visit the project: <a href="https://github.com/ember-addons/bootstrap-for-ember">https://github.com/ember-addons/bootstrap-for-ember</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bootstrap for Ember v0.2.0 released]]></title>
    <link href="http://asaf.github.io/blog/2013/08/29/bootstrap-for-ember-v0-dot-2-0-released/"/>
    <updated>2013-08-29T09:27:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/08/29/bootstrap-for-ember-v0-dot-2-0-released</id>
    <content type="html"><![CDATA[<p>Few days ago I submitted a post about <a href="blog/2013/08/26/bootstrap-for-ember-is-born/">Bootstrap for Ember</a>,
We released today the 2nd minor version 0.2.0,</p>

<p>So far, version 0.2.0 contains the following components:</p>

<ul>
<li><a href="http://ember-addons.github.io/bootstrap-for-ember/dist/#/show_components/alert">Alert</a></li>
<li><a href="http://ember-addons.github.io/bootstrap-for-ember/dist/#/show_components/label">Label</a></li>
<li><a href="http://ember-addons.github.io/bootstrap-for-ember/dist/#/show_components/badge">Badge</a></li>
<li><a href="http://ember-addons.github.io/bootstrap-for-ember/dist/#/show_components/well">Well</a></li>
<li><a href="http://ember-addons.github.io/bootstrap-for-ember/dist/#/show_components/page-header">Page Header</a></li>
<li><a href="http://ember-addons.github.io/bootstrap-for-ember/dist/#/show_components/button">Button</a></li>
<li><a href="http://ember-addons.github.io/bootstrap-for-ember/dist/#/show_components/progressbar">ProgressBar</a></li>
<li><a href="http://ember-addons.github.io/bootstrap-for-ember/dist/#/show_components/pills">Pills Navigation</a></li>
<li><a href="http://ember-addons.github.io/bootstrap-for-ember/dist/#/show_components/tabs">Tabs Navigation</a></li>
</ul>


<p>Project details:</p>

<ul>
<li><a href="https://github.com/ember-addons/bootstrap-for-ember">Github</a></li>
<li><a href="https://github.com/ember-addons/bootstrap-for-ember/releases/tag/0.2.0">Release</a></li>
<li><a href="http://ember-addons.github.io/bootstrap-for-ember">Showcase</a></li>
</ul>


<p>Have fun!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bootstrap for Ember is born]]></title>
    <link href="http://asaf.github.io/blog/2013/08/26/bootstrap-for-ember-is-born/"/>
    <updated>2013-08-26T07:29:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/08/26/bootstrap-for-ember-is-born</id>
    <content type="html"><![CDATA[<p>Bootstrap is an amazing set of pure CSS3 / HTML 5 components, while EmberJs amazes in its beauty of
making web applications right.</p>

<p>You can just hook both projects together by using Bootstrap as is in Handlebars templates,
But soon enough, you will find yourself asking questions sucha s:</p>

<ul>
<li>How do I interact between Bootstrap events and Ember (such as Controllers)?</li>
<li>How to pass Bootstrap components data from Ember (such as Controllers)</li>
</ul>


<p>I&rsquo;ve seen few options about the integration between both, but:</p>

<ul>
<li>They are not easy and fun to use, they make the ease of Bootstrap too complex.</li>
<li>They are not well documented.</li>
<li>Development is too slow, I haven&rsquo;t seen anything new lately.</li>
</ul>


<p>So! I&rsquo;m excited about a project I&rsquo;ve been working lately with some guys to integrate Bootstrap &amp; EmberJs together in a way that
doesnt make Bootstrap usage more complex than using it as-is but providing great integration with EmberJs components.</p>

<h1>Links!</h1>

<ul>
<li>Github Page: <a href="https://github.com/ember-addons/bootstrap-for-ember">https://github.com/ember-addons/bootstrap-for-ember</a></li>
<li>Showcase: <a href="http://ember-addons.github.io/bootstrap-for-ember/dist/">http://ember-addons.github.io/bootstrap-for-ember/dist/</a></li>
<li>Twitter: <a href="https://twitter.com/bs_for_ember">https://twitter.com/bs_for_ember</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nodejs-model is born]]></title>
    <link href="http://asaf.github.io/blog/2013/08/06/nodejs-model-is-born/"/>
    <updated>2013-08-06T03:22:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/08/06/nodejs-model-is-born</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been struggling lately to find an appropriate way to handle models correctly,
In one hand, these noSQL DBs such <em>CouchDB</em> have great flexibility and I didn&rsquo;t want to ruin that with a blowing up ORM framework,
in the other hand once the application grows a little bit more than a contact list app, then things become messy.</p>

<p>While writing a larger app with Node, I find myself struggling with finding solutions to problems such:
(there are few more but these are the main)</p>

<ul>
<li><strong>Validating a document (model) properties (application level) before storing it in the DB.</strong></li>
<li><strong>A minimal schema where each attribute is defined per model to ensure no allowed attributes leaks into the model.</strong></li>
<li><strong>Automatically convert a property value when a value is set.</strong></li>
<li><strong>Filter critical, sensitive attributes when transfering the model on the wire to external clients.</strong></li>
<li><strong>Updating an existing domain via an accessibility-aware method (you may want users to update their profile but not letting them directly change their password attribute)</strong></li>
</ul>


<p>So I couldn&rsquo;t really find a good module to achieve all of that without sticking a giant into my lightweight app, so I built one, it&rsquo;s named
<a href="https://github.com/asaf/nodejs-model">nodejs-model</a>, available here: <a href="https://github.com/asaf/nodejs-model">https://github.com/asaf/nodejs-model</a></p>

<p>For now, read the docs on the github repo for more info, i will post series of posts about <em>nodejs-model</em> in the near future.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nodejs Deployment: Building and Configuring on Amazon Linux AMI]]></title>
    <link href="http://asaf.github.io/blog/2013/07/10/nodejs-deployment-building-and-configuring-on-amazon-linux-ami/"/>
    <updated>2013-07-10T12:17:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/07/10/nodejs-deployment-building-and-configuring-on-amazon-linux-ami</id>
    <content type="html"><![CDATA[<h3>Logging in and updating system to latest</h3>

<p>SSH your shiny new VM,</p>

<p>Now lets update the system to the latest:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum update
</span></code></pre></td></tr></table></div></figure>


<h3>Install OS dependencies</h3>

<p>We&#8217;r going to build Node.js from sources, some dependencies (such as gcc) are required:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum install gcc-c++ make openssl-devel git
</span></code></pre></td></tr></table></div></figure>


<h3>Cloning n Building Node.js</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span>
</span><span class='line'>git clone git://github.com/joyent/node.git
</span><span class='line'><span class="nb">cd </span>node
</span><span class='line'>git checkout v0.10.13 <span class="c">#check for other stable tags by executing &#39;git tag&#39;</span>
</span><span class='line'>./configure --prefix<span class="o">=</span>/usr/local/node
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>Go grab a cup of coffee&hellip; :&ndash;)
&hellip;</p>

<h3>Configuration</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo useradd _yourappuser_
</span><span class='line'>passwd _yourappuser_
</span><span class='line'>sudo su - _yourappuser_
</span></code></pre></td></tr></table></div></figure>


<h3>Put your app</h3>

<p>Now put your app in ~, for instance:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span>
</span><span class='line'><span class="nb">pwd</span>
</span><span class='line'><span class="c">#/home/_yourappuser_</span>
</span><span class='line'>git clone _https://myhost.com/myapp myapp_
</span></code></pre></td></tr></table></div></figure>


<h3>Init.d</h3>

<p>We would like to have nodejs to start automatically as a service, to do so, lets create an init.d file
<em>Note: you have to change the properties in the file such as yourappuser, myapp to your app folder and server.js to your node app file.</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat <span class="s">&lt;&lt; &#39;EOF&#39; &gt; /etc/init.d/nodejs</span>
</span><span class='line'>
</span><span class='line'><span class="s">#!/bin/sh</span>
</span><span class='line'>
</span><span class='line'><span class="s">#</span>
</span><span class='line'><span class="s"># chkconfig: 35 99 99</span>
</span><span class='line'><span class="s"># description: Node.js /home/yourappuser/myapp/app.js</span>
</span><span class='line'><span class="s">#</span>
</span><span class='line'>
</span><span class='line'><span class="s">. /etc/rc.d/init.d/functions</span>
</span><span class='line'>
</span><span class='line'><span class="s">USER=&quot;_yourappuser_&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="s">NODE_ENV=&quot;production&quot;</span>
</span><span class='line'><span class="s">DAEMON=&quot;/usr/local/node/bin/node&quot;</span>
</span><span class='line'><span class="s">ROOT_DIR=&quot;/home/yourappuser/myapp&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="s">SERVER=&quot;$ROOT_DIR/server.js&quot;</span>
</span><span class='line'><span class="s">LOG_FILE=&quot;$ROOT_DIR/app.js.log&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="s">LOCK_FILE=&quot;/var/lock/subsys/node-server&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="s">do_start()</span>
</span><span class='line'><span class="s">{</span>
</span><span class='line'><span class="s">        if [ ! -f &quot;$LOCK_FILE&quot; ] ; then</span>
</span><span class='line'><span class="s">                echo -n $&quot;Starting $SERVER: &quot;</span>
</span><span class='line'><span class="s">                runuser -l &quot;$USER&quot; -c &quot;NODE_ENV=$NODE_ENV $DAEMON $SERVER &gt;&gt; $LOG_FILE &amp;&quot; &amp;&amp; echo_success || echo_failure</span>
</span><span class='line'><span class="s">                RETVAL=$?</span>
</span><span class='line'><span class="s">                echo</span>
</span><span class='line'><span class="s">                [ $RETVAL -eq 0 ] &amp;&amp; touch $LOCK_FILE</span>
</span><span class='line'><span class="s">        else</span>
</span><span class='line'><span class="s">                echo &quot;$SERVER is locked.&quot;</span>
</span><span class='line'><span class="s">                RETVAL=1</span>
</span><span class='line'><span class="s">        fi</span>
</span><span class='line'><span class="s">}</span>
</span><span class='line'><span class="s">do_stop()</span>
</span><span class='line'><span class="s">{</span>
</span><span class='line'><span class="s">        echo -n $&quot;Stopping $SERVER: &quot;</span>
</span><span class='line'><span class="s">        pid=`ps -aefw | grep &quot;$DAEMON $SERVER&quot; | grep -v &quot; grep &quot; | awk &#39;{print $2}&#39;`</span>
</span><span class='line'><span class="s">        kill -9 $pid &gt; /dev/null 2&gt;&amp;1 &amp;&amp; echo_success || echo_failure</span>
</span><span class='line'><span class="s">        RETVAL=$?</span>
</span><span class='line'><span class="s">        echo</span>
</span><span class='line'><span class="s">        [ $RETVAL -eq 0 ] &amp;&amp; rm -f $LOCK_FILE</span>
</span><span class='line'><span class="s">}</span>
</span><span class='line'>
</span><span class='line'><span class="s">case &quot;$1&quot; in</span>
</span><span class='line'><span class="s">        start)</span>
</span><span class='line'><span class="s">                do_start</span>
</span><span class='line'><span class="s">                ;;</span>
</span><span class='line'><span class="s">        stop)</span>
</span><span class='line'><span class="s">                do_stop</span>
</span><span class='line'><span class="s">                ;;</span>
</span><span class='line'><span class="s">        restart)</span>
</span><span class='line'><span class="s">                do_stop</span>
</span><span class='line'><span class="s">                do_start</span>
</span><span class='line'><span class="s">                ;;</span>
</span><span class='line'><span class="s">        *)</span>
</span><span class='line'><span class="s">                echo &quot;Usage: $0 {start|stop|restart}&quot;</span>
</span><span class='line'><span class="s">                RETVAL=1</span>
</span><span class='line'><span class="s">esac</span>
</span><span class='line'>
</span><span class='line'><span class="s">exit $RETVAL</span>
</span><span class='line'>
</span><span class='line'><span class="s">EOF</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add execution permission to the nodejs init script</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo chmod +x /etc/init.d/nodejs
</span></code></pre></td></tr></table></div></figure>


<h3>Pre Routing to port 80</h3>

<p>Linux does not allow non super users to listen to ports &lt; 1024, assuming your application listen to port <em>8080</em>,
You would probably like to pre route any traffic arriving from port <em>80</em> to your node app that listens to port <em>8080</em></p>

<p>You can do this by the pre routing nat capability of <em>Iptables</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chkconfig iptables on
</span><span class='line'>service iptables start
</span><span class='line'>iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080
</span><span class='line'>iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 8443 <span class="c">#if you want SSL too</span>
</span><span class='line'>service iptables save
</span></code></pre></td></tr></table></div></figure>


<h3>Configuring node-http-proxy</h3>

<p>It is common to install http proxies such as <em>nginx</em> on front of nodejs,
This architecture has many advantages such as raising security level, listening natively to port 80, load balancing, multiple node apps support
via url rewrite, etc&hellip;</p>

<p>I personally think that the best approach, which is very native to node apps is to use <a href="https://github.com/nodejitsu/node-http-proxy,">https://github.com/nodejitsu/node-http-proxy,</a></p>

<p>Which have several advantages:</p>

<ol>
<li>Reverse proxies incoming http.ServerRequest streams, WebSockets, HTTPS</li>
<li>Minimal request overhead and latency</li>
<li>Battled-hardened through production usage</li>
<li>Very native for nodejs apps</li>
</ol>


<p>TODO: Will post more details in the future but you can simply visit <a href="node-http-proxy">&ldquo;https://github.com/nodejitsu/node-http-proxy&rdquo;</a> site.</p>

<p><a href="https://github.com/pkrumins/nodejs-proxy">https://github.com/pkrumins/nodejs-proxy</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing CouchDB instance on Amazon AMI using build-couchdb]]></title>
    <link href="http://asaf.github.io/blog/2013/07/10/installing-couchdb-instance-on-amazon-ami-using-build-couchdb/"/>
    <updated>2013-07-10T10:54:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/07/10/installing-couchdb-instance-on-amazon-ami-using-build-couchdb</id>
    <content type="html"><![CDATA[<p><img src="http://couchdb.apache.org/image/couch.png" width="160" height="180" title="Couch" ></p>

<p>This post explains how to install CouchDB on Amazon AMI using <a href="https://github.com/iriscouch/build-couchdb">build-couchdb</a>/</p>

<p>If you want to install couch from sources without build-couchdb tool, read:
<a href="http://asaf.github.io/blog/2013/07/08/installing-couch-db-on-amazon-ami/">Installing CouchDB instance on Amazon AMI</a> is a working link</p>

<p>build-couchdb does the following things:</p>

<ol>
<li>Install general dependencies via yum (such as gcc, ruby, automake, rubygems, etc.)</li>
<li>Clone the &lsquo;build-couchdb&rsquo; project, initalize and update its sub modules (will clone CouchDB itself, curl, gnulib, etc),
These are all the dependencies that CouchDB needs in order to be compiled.</li>
<li>Compiles all dependencies</li>
<li>Compiles CouchDB linked with the compiled dependencies.</li>
</ol>


<p>Okay, go grab coffee and lets start!</p>

<h3>Launch Instance</h3>

<p>Login into EC2, and launch a new instanc and choose <em>Amazon Linux AMI</em>,
You can of course choose other Linux flavours (you are not going to use Windows right?),</p>

<p>But I really suggest going with Amazon AMI, it is EBS backed, ships with AWS tools installed and has a
RHEL style package management using <em>yum</em>.</p>

<p>Once your instance is launched, SSH it, i&rsquo;m sure you can do.</p>

<p>Now lets updated the system to latest:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum update
</span></code></pre></td></tr></table></div></figure>


<h3>Installation</h3>

<h4>Installing OS dependencies</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum install gcc gcc-c++ libtool curl-devel python27 help2man texinfo ruby-rdoc zlib-devel openssl-devel make automake rubygems perl git-core
</span><span class='line'>sudo gem install rake --no-ri --no-rdoc
</span></code></pre></td></tr></table></div></figure>


<p>If you don&rsquo;t want to get into troubles where build-couch tries to patch autoconf-2.69 because of old python version (&lt; 2.6) then link to python 2.7,
at least during the time couch is being built.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mv /usr/bin/python /usr/bin/python_org
</span><span class='line'>sudo ln -s /usr/bin/python2.7 /usr/bin/python
</span></code></pre></td></tr></table></div></figure>


<h4>Clone build-couchdb</h4>

<p>git clone git://github.com/iriscouch/build-couchdb
cd build-couchdb
git submodule init
git submodule update</p>

<h4>Optional: Upgrade SpiderMonkey</h4>

<p>build-couch uses not an official Mozilla SpiderMonkey version, but considered to be very stable,
if you would like to replace it with other versions then do the following,
<em>You can safely skip this, proceed only if you have a good reason to do so</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum install mercurial
</span><span class='line'><span class="nb">cd</span>
</span><span class='line'>hg clone --verbose http://hg.mozilla.org/releases/mozilla-release
</span><span class='line'><span class="nb">cd </span>mozilla-release
</span><span class='line'>hg checkout FIREFOX_XX_0_RELEASE --clean <span class="c">#replace XX with the tag you wish</span>
</span><span class='line'>rm -rf ~/build-couchdb/dependencies/spidermonkey/js
</span><span class='line'>rm -rf ~/build-couchdb/dependencies/spidermonkey/mfbt
</span><span class='line'>cp -r js mfbt ~/build-couchdb/dependencies/spidermonkey
</span></code></pre></td></tr></table></div></figure>


<h4>Building CouchDB and its dependencies</h4>

<p>Now lets build Couch, you can replace <em>1.3.1</em> with any CouchDB release you wish to build,
Or change the installation location.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo rake <span class="nv">git</span><span class="o">=</span><span class="s2">&quot;git://git.apache.org/couchdb.git tags/1.3.1&quot;</span> <span class="nv">install</span><span class="o">=</span>/usr/local/couchdb-1.3.1
</span><span class='line'>sudo ln -s /usr/local/couchdb-1.3.1 /usr/local/couchdb
</span></code></pre></td></tr></table></div></figure>


<p>Now go eat something, drink (another?) coffee, take a shower (you will have time for all of them, I promise.)</p>

<p>You should expect the following output:</p>

<blockquote><p>Plugins done</p></blockquote>

<p>Now lets see what we&rsquo;ve built:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /usr/local/couchdb-1.3.1
</span><span class='line'>ls bin
</span><span class='line'>
</span><span class='line'>&gt; aclocal       autoheader2.13  autom4te2.69    autoreconf2.69  autoupdate2.59  ct_run       erl       genctd       ifnames2.62  pkgdata
</span><span class='line'>&gt; aclocal-1.11  autoheader2.59  automake        autoscan2.13    autoupdate2.62  curl         erlc      genrb        ifnames2.69  run_erl
</span><span class='line'>&gt; autoconf2.13  autoheader2.62  automake-1.11   autoscan2.59    autoupdate2.69  curl-config  escript   icu-config   js-config    run_test
</span><span class='line'>&gt; autoconf2.59  autoheader2.69  autoreconf2.13  autoscan2.62    couch-config    derb         genbrk    icuinfo      libtool      to_erl
</span><span class='line'>&gt; autoconf2.62  autom4te2.59    autoreconf2.59  autoscan2.69    couchdb         dialyzer     gencfu    ifnames2.13  libtoolize   typer
</span><span class='line'>&gt; autoconf2.69  autom4te2.62    autoreconf2.62  autoupdate2.13  couchjs         epmd         gencnval  ifnames2.59  makeconv     uconv
</span></code></pre></td></tr></table></div></figure>


<p>Lets execute Couch to ensure it can be executed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo ./bin/couchdb
</span><span class='line'>
</span><span class='line'>&gt; Apache CouchDB 1.3.1 <span class="o">(</span><span class="nv">LogLevel</span><span class="o">=</span>info<span class="o">)</span> is starting.
</span><span class='line'>&gt; Apache CouchDB has started. Time to relax.
</span><span class='line'>&gt; <span class="o">[</span>info<span class="o">]</span> <span class="o">[</span>&lt;0.32.0&gt;<span class="o">]</span> Apache CouchDB has started on http://127.0.0.1:5984/
</span></code></pre></td></tr></table></div></figure>


<p>You can open another terminal to ensure Couch replies properly:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl http://127.0.0.1:5984
</span><span class='line'>
</span><span class='line'>&gt; <span class="o">{</span><span class="s2">&quot;couchdb&quot;</span>:<span class="s2">&quot;Welcome&quot;</span>,<span class="s2">&quot;uuid&quot;</span>:<span class="s2">&quot;9db29433ea76ccfaa81726f6ace742f4&quot;</span>,<span class="s2">&quot;version&quot;</span>:<span class="s2">&quot;1.3.1&quot;</span>,<span class="s2">&quot;vendor&quot;</span>:<span class="o">{</span><span class="s2">&quot;name&quot;</span>:<span class="s2">&quot;The Apache Software Foundation&quot;</span>,<span class="s2">&quot;version&quot;</span>:<span class="s2">&quot;1.3.1&quot;</span><span class="o">}}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Configuration</h3>

<h4>Replace Python link</h4>

<p>To avoid breaking yum and other things, it is adviced to return the python binary link back to its original version</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo rm /usr/bin/python
</span><span class='line'>sudo mv /usr/bin/python_org /usr/bin/python
</span></code></pre></td></tr></table></div></figure>


<h4>Run Couch on isolated user and correct files ownership</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># add couchdb user</span>
</span><span class='line'>sudo adduser --system --home /usr/local/couchdb/var/lib/couchdb -M --shell /bin/bash --comment <span class="s2">&quot;CouchDB&quot;</span> couchdb
</span><span class='line'>
</span><span class='line'><span class="c"># change file ownership</span>
</span><span class='line'>sudo chown -R couchdb:couchdb /usr/local/couchdb/etc/couchdb /usr/local/couchdb/var/lib/couchdb /usr/local/couchdb/var/log/couchdb /usr/local/couchdb/var/run/couchdb
</span></code></pre></td></tr></table></div></figure>


<h4>couch ini file</h4>

<p>Lets create couch ini file</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat <span class="s">&lt;&lt; &#39;EOF&#39; &gt; /usr/local/couchdb/etc/couchdb/local.ini</span>
</span><span class='line'><span class="s">[couchdb]</span>
</span><span class='line'><span class="s">#read more here: http://guide.couchdb.org/draft/performance.html</span>
</span><span class='line'><span class="s">delayed_commits = false</span>
</span><span class='line'>
</span><span class='line'><span class="s">[httpd]</span>
</span><span class='line'><span class="s">port = 80</span>
</span><span class='line'><span class="s">bind_address = 0.0.0.0</span>
</span><span class='line'><span class="s">socket_options = [{recbuf, 262144}, {sndbuf, 262144}, {nodelay, true}]</span>
</span><span class='line'><span class="s">WWW-Authenticate = Basic realm=&quot;administrator&quot;</span>
</span><span class='line'><span class="s">;WWW-Authenticate = bummer</span>
</span><span class='line'>
</span><span class='line'><span class="s">[couch_httpd_auth]</span>
</span><span class='line'><span class="s">require_valid_user = true</span>
</span><span class='line'>
</span><span class='line'><span class="s">[log]</span>
</span><span class='line'><span class="s">level = error</span>
</span><span class='line'>
</span><span class='line'><span class="s">[admins]</span>
</span><span class='line'><span class="s">EOF</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Password protection</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">PASS</span><span class="o">=</span><span class="sb">`</span>&lt;/dev/urandom tr -dc <span class="s1">&#39;12345!@#$%qwertQWERTasdfgASDFGzxcvbZXCVB&#39;</span> | head -c20; <span class="nb">echo</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;admin = ${ADMIN_PASSWORD}&quot;</span> &gt;&gt; /usr/local/etc/couchdb/local.ini
</span></code></pre></td></tr></table></div></figure>


<p>Couch is smart enough to hash the passwords.</p>

<h4>Logs Rotation</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">if</span> <span class="o">[</span> ! -e <span class="s2">&quot;/etc/logrotate.d/couchdb&quot;</span> <span class="o">]</span>
</span><span class='line'><span class="k">then</span>
</span><span class='line'>  <span class="c"># add couch.log to logrotate</span>
</span><span class='line'>  sudo ln -s /usr/local/couchdb/etc/logrotate.d/couchdb /etc/logrotate.d/
</span><span class='line'>  <span class="c"># change to daily rotation</span>
</span><span class='line'>  sudo sed -e s/weekly/daily/g -i /usr/local/couchdb/etc/logrotate.d/couchdb
</span><span class='line'>  <span class="c">#logrotate -v -f /etc/logrotate.d/couchdb </span>
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Run CouchDB on startup</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># run couchdb on startup</span>
</span><span class='line'>sudo ln -s /usr/local/couchdb/etc/rc.d/couchdb /etc/init.d/couchdb
</span><span class='line'>sudo chkconfig --add couchdb
</span><span class='line'>sudo chkconfig --level 345 couchdb on
</span><span class='line'>
</span><span class='line'>sudo service couchdb status
</span><span class='line'><span class="c">#Apache CouchDB is not running.</span>
</span><span class='line'>
</span><span class='line'>sudo service couchdb start
</span><span class='line'><span class="c">#Apache CouchDB is running as process 5047, time to relax.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now it&rsquo;s really time to relax, enjoy :&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Q promises with CoffeeScript]]></title>
    <link href="http://asaf.github.io/blog/2013/07/09/q-promises-with-coffeescript/"/>
    <updated>2013-07-09T06:03:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/07/09/q-promises-with-coffeescript</id>
    <content type="html"><![CDATA[<p>If you are using NodeJS (or for some other reasons you need to do many async invocations), then you probably came across <a href="Q%20Promises">&ldquo;https://github.com/kriskowal/q&rdquo;</a>.</p>

<p>Using Q with CoffeeScript is great as code blocks are much more organized and looks cleaner.</p>

<p>Here&rsquo;s an example:</p>

<p>Defining promises with CoffeeScript:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">q = </span><span class="nx">require</span> <span class="s">&#39;q&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">exports.hello = </span><span class="p">()</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nv">d = </span><span class="nx">q</span><span class="p">.</span><span class="nx">defer</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">d</span><span class="p">.</span><span class="nx">resolve</span> <span class="s">&#39;hello&#39;</span>
</span><span class='line'>  <span class="nx">d</span><span class="p">.</span><span class="nx">promise</span>
</span><span class='line'>
</span><span class='line'><span class="nv">exports.world = </span><span class="p">()</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nv">d = </span><span class="nx">q</span><span class="p">.</span><span class="nx">defer</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">d</span><span class="p">.</span><span class="nx">resolve</span> <span class="s">&#39;world&#39;</span>
</span><span class='line'>  <span class="nx">d</span><span class="p">.</span><span class="nx">promise</span>
</span><span class='line'>
</span><span class='line'><span class="nv">exports.die = </span><span class="p">()</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nv">d = </span><span class="nx">q</span><span class="p">.</span><span class="nx">defer</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">d</span><span class="p">.</span><span class="nx">reject</span> <span class="s">&#39;bye world&#39;</span>
</span><span class='line'>  <span class="nx">d</span><span class="p">.</span><span class="nx">promise</span>
</span></code></pre></td></tr></table></div></figure>


<p>And here are Mocha sample of Q propagations and error handling</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">assert = </span><span class="nx">require</span> <span class="s">&#39;assert&#39;</span><span class="p">,</span>
</span><span class='line'><span class="nv">promises = </span><span class="nx">require</span> <span class="s">&#39;./promises&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">describe</span><span class="p">(</span><span class="s">&#39;Promises&#39;</span><span class="p">,</span> <span class="p">()</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nx">it</span> <span class="s">&#39;Simple&#39;</span><span class="p">,</span> <span class="nf">(done) -&gt;</span>
</span><span class='line'>    <span class="nx">promises</span><span class="p">.</span><span class="nx">die</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span>
</span><span class='line'>      <span class="nf">(val) =&gt;</span>
</span><span class='line'>        <span class="c1">#handle val</span>
</span><span class='line'>      <span class="nf">(err) =&gt;</span>
</span><span class='line'>        <span class="nx">assert</span><span class="p">.</span><span class="nx">equal</span> <span class="nx">err</span><span class="p">,</span> <span class="s">&#39;bye world&#39;</span>
</span><span class='line'>        <span class="nx">done</span><span class="p">()</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">it</span> <span class="s">&#39;Test Promises Propagation&#39;</span><span class="p">,</span> <span class="nf">(done) -&gt;</span>
</span><span class='line'>    <span class="nx">promises</span><span class="p">.</span><span class="nx">hello</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span>
</span><span class='line'>      <span class="nf">(val) =&gt;</span>
</span><span class='line'>        <span class="nx">assert</span><span class="p">.</span><span class="nx">equal</span> <span class="nx">val</span><span class="p">,</span> <span class="s">&#39;hello&#39;</span>
</span><span class='line'>        <span class="nx">promises</span><span class="p">.</span><span class="nx">world</span><span class="p">()</span>
</span><span class='line'>    <span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="nf">(val) =&gt;</span>
</span><span class='line'>        <span class="nx">assert</span><span class="p">.</span><span class="nx">equal</span> <span class="nx">val</span><span class="p">,</span> <span class="s">&#39;world&#39;</span>
</span><span class='line'>        <span class="nx">done</span><span class="p">()</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">it</span> <span class="s">&#39;Test promises propagation with error&#39;</span><span class="p">,</span> <span class="nf">(done) -&gt;</span>
</span><span class='line'>    <span class="nx">promises</span><span class="p">.</span><span class="nx">hello</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span>
</span><span class='line'>      <span class="nf">(val) =&gt;</span>
</span><span class='line'>        <span class="nx">assert</span><span class="p">.</span><span class="nx">equal</span> <span class="nx">val</span><span class="p">,</span> <span class="s">&#39;hello&#39;</span>
</span><span class='line'>        <span class="nx">promises</span><span class="p">.</span><span class="nx">die</span><span class="p">()</span>
</span><span class='line'>    <span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="nf">(val) =&gt;</span>
</span><span class='line'>        <span class="nx">promises</span><span class="p">.</span><span class="nx">world</span><span class="p">()</span>
</span><span class='line'>    <span class="p">).</span><span class="nx">then</span><span class="p">(</span>
</span><span class='line'>      <span class="nf">(val) =&gt;</span>
</span><span class='line'>        <span class="c1">#we wont get here</span>
</span><span class='line'>      <span class="nf">(err) =&gt;</span>
</span><span class='line'>        <span class="nx">assert</span><span class="p">.</span><span class="nx">equal</span> <span class="nx">err</span><span class="p">,</span> <span class="s">&#39;bye world&#39;</span>
</span><span class='line'>        <span class="nx">promises</span><span class="p">.</span><span class="nx">world</span><span class="p">()</span>
</span><span class='line'>    <span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="nf">(val) =&gt;</span>
</span><span class='line'>      <span class="nx">assert</span><span class="p">.</span><span class="nx">equal</span> <span class="nx">val</span><span class="p">,</span> <span class="s">&#39;world&#39;</span>
</span><span class='line'>      <span class="nx">done</span><span class="p">()</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing CouchDB instance on Amazon AMI]]></title>
    <link href="http://asaf.github.io/blog/2013/07/08/installing-couch-db-on-amazon-ami/"/>
    <updated>2013-07-08T18:53:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/07/08/installing-couch-db-on-amazon-ami</id>
    <content type="html"><![CDATA[<p><img src="http://couchdb.apache.org/image/couch.png" width="160" height="180" title="Couch" ></p>

<p>One of our platform is based on CouchDB, we host everything on Amazon EC2 and while Amazon lacks with CouchDB support,
I have decided to build our own CouchDB server.</p>

<p>So here&rsquo;s a guide, how to install CouchDB on Amazon AMI (Amazon Linux):</p>

<h3>Launch Instance</h3>

<p>Login into EC2, and launch a new instanc and choose <em>Amazon Linux AMI</em>,
You can of course choose other Linux flavours (you are not going to use Windows right?),</p>

<p>But I really suggest going with Amazon AMI, it is EBS backed, ships with AWS tools installed and has a
RHEL style package management using <em>yum</em>.</p>

<p>Once your instance is launched, SSH it, i&rsquo;m sure you can do.</p>

<p>Now lets updated the system to latest:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo yum update
</span></code></pre></td></tr></table></div></figure>


<h2>UPDATE</h2>

<p><em>Before proceeding with this guide, which compiles CouchDB from sources without any automated tool</em></p>

<p>I found this project:
<a href="https://github.com/iriscouch/build-couchdb">https://github.com/iriscouch/build-couchdb</a></p>

<p>Which maintains its own CouchDB dependencies and perform the build for you, if you choose this approach, check out this post:
<a href="http://asaf.github.io/blog/2013/07/10/installing-couchdb-instance-on-amazon-ami-using-build-couchdb/">Installing CouchDB instance on Amazon AMI using build-couchdb</a> is a working link</p>

<p>But if you still want to build from sources (which is more depdendent on Amazon&rsquo;s dependencies) proceed reading.</p>

<h3>Installing CouchDB via EPEL</h3>

<p>Enabling EPEL repo, we need some packages missing in standard Amazon repos:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>vi /etc/yum.repos.d/epel.repo
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'><span class="c">#change to enabled=1</span>
</span><span class='line'><span class="nv">enabled</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<p>Now if you don&rsquo;t care to work with old CouchDB version, you can simply install it by:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>yum info couchdb
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>yum install couchdb
</span></code></pre></td></tr></table></div></figure>


<p>But if this is not sufficient for you like us and you want a more updated version, proceed reading :&ndash;)</p>

<h3>Installing latest CouchDB</h3>

<p>Current CouchDB version is <em>1.3.1</em>, but this guide should work for future versions as well (unless CouchDB folks decides to do major changes)</p>

<h4>Install Dependencies</h4>

<p>We are going to build CouchDB from sources, Couch is written in <a href="Erlang">http://www.erlang.org/</a>, so few dependencies are needed:</p>

<p>(Note: Don&rsquo;t forget to enable EPEL repo, see above!)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo yum groupinstall <span class="s2">&quot;Development Tools&quot;</span>
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo yum install perl-Test-Harness
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo yum install erlang-erts
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo yum install erlang-os_mon
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo yum install erlang-eunit
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo yum install libicu-devel
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo yum install autoconf-archive <span class="c">#only available in EPEL repo</span>
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo yum install curl-devel
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo yum install erlang-etap
</span></code></pre></td></tr></table></div></figure>


<p>From Couch folks:</p>

<blockquote><p>While CouchDB builds against the default js-devel-1.7.0 included in some
distributions, it&rsquo;s recommended to use a more recent js-devel-1.8.5.</p></blockquote>

<p>And since Amazon AMI only ships (via EPEL repo) with 1.7.0, we&#8217;r going to build js-devel-1.8.5:
If you feel comfortable with js-devel 1.7.0, you can just:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo yum install js-devel
</span></code></pre></td></tr></table></div></figure>


<p>OR: if you have the energy, or this is going to be a production environment, then install js-devel from sources:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span><span class="nb">cd</span> ~
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.13.tar.gz
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span><span class="nb">cd </span>autoconf-2.13
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>./configure --prefix<span class="o">=</span>/usr/local/autoconf-2.13
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo make install
</span><span class='line'>
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span><span class="nb">cd</span> ~
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>wget http://ftp.mozilla.org/pub/mozilla.org/js/js185-1.0.0.tar.gz
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>tar zxvfl js185-1.0.0.tar.gz
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span><span class="nb">cd </span>js-1.8.5/js/src/
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>/usr/local/autoconf-2.13/bin/autoconf
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>./configure
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>make
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo make install <span class="c">#this installs js-devel under /usr/local</span>
</span></code></pre></td></tr></table></div></figure>


<p>Some references:</p>

<ul>
<li>Mozila SpiderMonkey reference: <a href="https://developer.mozilla.org/en-US/docs/SpiderMonkey/Build_Documentation">https://developer.mozilla.org/en-US/docs/SpiderMonkey/Build_Documentation</a></li>
<li>CouchDB SpiderMonkey reference: <a href="http://wiki.apache.org/couchdb/Installing_SpiderMonkey">http://wiki.apache.org/couchdb/Installing_SpiderMonkey</a></li>
<li>CouchDB dependencies requirements: <a href="https://github.com/apache/couchdb/blob/master/INSTALL.Unix">https://github.com/apache/couchdb/blob/master/INSTALL.Unix</a></li>
<li>Installing CouchDB on RHEL5: <a href="http://wiki.apache.org/couchdb/Installing_on_RHEL5">http://wiki.apache.org/couchdb/Installing_on_RHEL5</a></li>
</ul>


<h4>Building CouchDB from sources</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span><span class="nb">cd</span> ~
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>git clone https://github.com/apache/couchdb.git
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span><span class="nb">cd </span>couchdb
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>git checkout -b 1.3.1 1.3.1
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>./bootstrap <span class="c">#should output: You have bootstrapped Apache CouchDB, time to relax.</span>
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>./configure --with-erlang<span class="o">=</span>/usr/lib64/erlang/usr/include --with-js-lib<span class="o">=</span>/usr/local/lib/ --with-js-include<span class="o">=</span>/usr/local/include/js/ <span class="c">#should output: You have configured Apache CouchDB, time to relax.</span>
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>make
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>make <span class="nb">test</span>
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>make install
</span></code></pre></td></tr></table></div></figure>


<p><em>Note:</em> you can of course replace <em>1.3.1</em> tag with the latest stable version if there&rsquo;s any.</p>

<p>Hey, we&#8217;r almost done, lets configure the environment.</p>

<h4>Create a couch user</h4>

<p>For security reasons, create a dedicated couch user and correct files ownership and permissions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo adduser -r --home /usr/local/var/lib/couchdb -M --shell /bin/bash --comment <span class="s2">&quot;CouchDB Administrator&quot;</span> couchdb
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo chown -R couchdb:couchdb /usr/local/etc/couchdb
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo chown -R couchdb:couchdb /usr/local/var/lib/couchdb
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo chown -R couchdb:couchdb /usr/local/var/log/couchdb
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo chown -R couchdb:couchdb /usr/local/var/run/couchdb
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo chmod 0770 /usr/local/etc/couchdb
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo chmod 0770 /usr/local/var/lib/couchdb
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo chmod 0770 /usr/local/var/log/couchdb
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo chmod 0770 /usr/local/var/run/couchdb
</span></code></pre></td></tr></table></div></figure>


<h4>Starting Couch</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo /usr/local/etc/rc.d/couchdb start
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo /usr/local/etc/rc.d/couchdb status <span class="c">#should result: Apache CouchDB is running as process 3548, time to relax.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Check that things are working:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>curl http://localhost:5984
</span><span class='line'>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;couchdb&quot;</span>:<span class="s2">&quot;Welcome&quot;</span>,<span class="s2">&quot;uuid&quot;</span>:<span class="s2">&quot;6d597578de8744f92bdbc99c368c10ca&quot;</span>,<span class="s2">&quot;version&quot;</span>:<span class="s2">&quot;1.3.1&quot;</span>,<span class="s2">&quot;vendor&quot;</span>:<span class="o">{</span><span class="s2">&quot;name&quot;</span>:<span class="s2">&quot;The Apache Software Foundation&quot;</span>,<span class="s2">&quot;version&quot;</span>:<span class="s2">&quot;1.3.1&quot;</span><span class="o">}}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Starting services when system starts</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo ln -s /usr/local/etc/rc.d/couchdb /etc/init.d/couchdb
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>sudo chkconfig --level 345 couchdb on
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>service couchdb stop
</span><span class='line'><span class="o">[</span>ec2-user@ip ~<span class="o">]</span><span class="nv">$ </span>service couchdb start
</span></code></pre></td></tr></table></div></figure>


<p>I suggest you to create a template at this stage, so you can simply create new instances whenever you need,</p>

<p>Hey, you are done, now it&rsquo;s really time to relax :&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Accessing EmberJS Controller from different scopes]]></title>
    <link href="http://asaf.github.io/blog/2013/07/08/accessing-emberjs-controller-from-different-scopes/"/>
    <updated>2013-07-08T10:32:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/07/08/accessing-emberjs-controller-from-different-scopes</id>
    <content type="html"><![CDATA[<p>Sometimes you want to use one <em>ember</em> controller from another,
This simply can be done by &ldquo;asking&rdquo; ember access to the other controller:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">App</span><span class="p">.</span><span class="nx">PostController</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">ArrayController</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nx">App</span><span class="p">.</span><span class="nx">CommentsController</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">ArrayController</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">needs</span><span class="o">:</span> <span class="s2">&quot;post&quot;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then you can simply use the <em>Post</em> controller in <em>Comments</em>&rsquo;s template:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- use comments template --&gt;</span>
</span><span class='line'>{{ controllers.post }}
</span></code></pre></td></tr></table></div></figure>


<p>This works pretty nice, especially when you have nested routes (you surely want to display some data of the post when you are in the post&rsquo;s comments context.),</p>

<p>But what if you need to access a controller outside of Ember&rsquo;s scope?</p>

<p>For instance, you may have a websocket listening to a certain top level event and would like to update a certian controller when data is pushed,</p>

<p>You can use the container lookup to retrieve a controller instance:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Somewhere out of Ember`s scope</span>
</span><span class='line'><span class="nx">ss</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;incomingComment&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">comment</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">commentsController</span> <span class="o">=</span> <span class="nx">App</span><span class="p">.</span><span class="nx">__container__</span><span class="p">.</span><span class="nx">lookup</span><span class="p">(</span><span class="s1">&#39;controller:Comments&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">commentsController</span><span class="p">.</span><span class="nx">pushObject</span><span class="p">(</span><span class="nx">comment</span><span class="p">)</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blogging with Octopress: Add Comments]]></title>
    <link href="http://asaf.github.io/blog/2013/07/08/blogging-with-octopress-add-comments/"/>
    <updated>2013-07-08T10:13:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/07/08/blogging-with-octopress-add-comments</id>
    <content type="html"><![CDATA[<p>If you want your blog to support comments, follow this:</p>

<p>Octopress has a native 3rd party plugin for Disqus that will host all your blog&rsquo;s comments.</p>

<p>Visit <a href="Disqus">http://www.disqus.com</a> web site and sign in,
Then <a href="Signup%20for%20a%20new%20application">https://disqus.com/admin/signup/</a>.</p>

<p>Here&rsquo;s example how I file the signup form my blog which is hosted in GitHub pages.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Site Url: asaf.github.io
</span><span class='line'>Site Name: Asaf Shakarchi's Blog
</span><span class='line'>Site Shortname: asafshakarchisblog</span></code></pre></td></tr></table></div></figure>


<p><em>Remember the site short name, you need it soon!</em></p>

<p>Then configure <em>Octopress</em> to be aware of your new <em>Disqus</em> application:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>octopress <span class="c">#or wherever your octopress folder is located</span>
</span><span class='line'>vi _config.yml
</span><span class='line'>
</span><span class='line'><span class="c">#then change discqus_short_name line:</span>
</span><span class='line'>disqus_short_name: asafshakarchisblog <span class="c">#replace with the short name you&#39;ve put in the app signup form</span>
</span></code></pre></td></tr></table></div></figure>


<p>Done!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blogging with Octopress: Add About Page]]></title>
    <link href="http://asaf.github.io/blog/2013/07/08/blogging-with-octopress-add-about-page/"/>
    <updated>2013-07-08T09:58:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/07/08/blogging-with-octopress-add-about-page</id>
    <content type="html"><![CDATA[<p>Adding About Me page, probably one of the first thing to do, right?</p>

<p><em>Note: If you just want to say few words about yourself on the aside panel, skip to <em>About Me on the aside panel</em></em></p>

<h3>Adding About Page</h3>

<p>Create the page:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake new_page<span class="o">[</span><span class="s2">&quot;about&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>rake creates a new page located in <em>source/about/index.markdown</em></p>

<p>I edited mine to look like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="l-Scalar-Plain">layout</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">page</span>
</span><span class='line'><span class="l-Scalar-Plain">title</span><span class="p-Indicator">:</span> <span class="s">&quot;About</span><span class="nv"> </span><span class="s">Me&quot;</span>
</span><span class='line'><span class="l-Scalar-Plain">comments</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'><span class="l-Scalar-Plain">sharing</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'><span class="l-Scalar-Plain">footer</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'><span class="nn">---</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note that I removed the <em>date</em> line because it doesn&rsquo;t make sense in this page.</p>

<h4>Add About page in the top menu</h4>

<p>You probably want to add the <em>About</em> page in the top menu, right?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vi <span class="nb">source</span>/_includes/custom/navigation.html
</span><span class='line'>
</span><span class='line'><span class="c">#add the line to the bottom of the page:</span>
</span><span class='line'>&lt;li&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/about&quot;</span>&gt;About&lt;/a&gt;&lt;/li&gt;
</span></code></pre></td></tr></table></div></figure>


<h3>About on the aside panel</h3>

<p>If u want to put some words about yourself on the side panel panel, do this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vi <span class="nb">source</span>/_includes/custom/asides/about.html
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;your name&lt;h1/&gt;
</span><span class='line'>&lt;p&gt;some words about you, not longer than a line.&lt;/p&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Then enable the about html in the aside bar by:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vi _config.yml
</span><span class='line'>
</span><span class='line'>default_asides: <span class="o">[</span>custom/asides/about.html, OTHER STUFF<span class="o">]</span> <span class="c"># leave all other pages as is</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now the world knows about who you are :&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blogging with Octopress: Quick Installation]]></title>
    <link href="http://asaf.github.io/blog/2013/07/08/blogging-with-octopress-quick-installation/"/>
    <updated>2013-07-08T09:10:00-07:00</updated>
    <id>http://asaf.github.io/blog/2013/07/08/blogging-with-octopress-quick-installation</id>
    <content type="html"><![CDATA[<p>I really wanted to revive my blog (which was hosted in Blogger), but I wanted to have more control over it,
It just feels very natural for guys like me who uses vi more than GUI =)</p>

<p>Since Octopress docs are too long and frustrating (oh common, i just wanted a blog), I decided to dedicate few posts for it,
I hope I&rsquo;ll have the time to record (blog, post, whatever) all the cool things i&rsquo;m gonna add to my blog in the future.</p>

<p>15 minutes and you have a pro blog, so there we go:</p>

<h3>Installing Ruby</h3>

<h4>Ubuntu</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install ruby 1.9.3
</span></code></pre></td></tr></table></div></figure>


<h4>MacOS</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew update
</span><span class='line'>brew install rbenv
</span><span class='line'>brew install ruby-build
</span><span class='line'>rbenv install 1.9.3-p0
</span><span class='line'>rbenv rehash
</span></code></pre></td></tr></table></div></figure>


<p>(If you don&rsquo;t have brew, visit: <a href="http://mxcl.github.io/homebrew">http://mxcl.github.io/homebrew</a>)</p>

<h3>Installing Octopress</h3>

<p>Now Ocotopress !</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~ <span class="c">#or wherever u want the octopress folder to be located</span>
</span><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nb">cd </span>octipress
</span><span class='line'>gem install bundler
</span><span class='line'>rbenv rehash <span class="c">#only if using rbenv</span>
</span><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>Thats it!</p>

<h3>Deploying your blog in GitHub pages.</h3>

<p>There are other alternatives, but I personally love GitHub, to deploy your blog in GitHub pages:</p>

<ul>
<li><p><a href="https://github.com/new">Create a GitHub repo</a> and name it <em>your_user.github.io</em>, where <em>your_user</em> is your github username, mine is <em>asaf</em>,
so it&rsquo;ll be: <em>asaf.github.io</em></p></li>
<li><p>Lets tell Octopress about your github created repo (that&rsquo;ll hold your blog):</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake setup_github_pages
</span></code></pre></td></tr></table></div></figure>


<p>When it asks for your git repo, paste: <em>git@github.com:your_user/your_user.github.io</em>, for example mine is: <em>git@github.com:asaf/asaf.github.io</em></p>

<ul>
<li>Now lets deploy and see our new shiny blog!</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake generate
</span><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>This generates the blog site from the (default) sources, commit it via <em>git</em> and deploy it in the created github repo.</p>

<p>Thats all!</p>

<p>now visit: <a href="http://your_user.github.io">http://your_user.github.io</a> to see your blog!</p>

<h3>Minimal Configuration</h3>

<p>And if we&#8217;r already here, lets quickly configure the minimal details:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vi _config.yml
</span><span class='line'>title: Blog title, I put my full name.
</span><span class='line'>subtitle: What are you going to blog about?
</span><span class='line'>author: Your full name
</span></code></pre></td></tr></table></div></figure>


<p>rake generate
rake deploy</p>

<p>But it looks gray and dark and missing some cool stuff, isn&rsquo;t it? follow the next blog about how to customize OctoPress =)</p>
]]></content>
  </entry>
  
</feed>
